{"version":3,"sources":["Components/header/header.module.css","pages/Order/order.module.css","Components/orderDetails/order-details.module.css","Components/profileComponents/profileOrders/profile-orders.module.css","utils/functions/checkResponse.ts","utils/functions/cookieFunctions/getCookie.ts","utils/functions/cookieFunctions/setCookie.ts","utils/functions/cookieFunctions/deleteCookie.ts","Services/actions/requestAction/requestsActions.ts","Services/actions/componentAction/components.ts","Services/reducers/ordersReducer/orders.ts","Services/reducers/requestsReducer/requestsReducer.ts","Services/actions/socketAction/socketActions.ts","Services/reducers/socketReducer/socketReducer.ts","Services/reducers/componentsReducer/components.ts","utils/types/store.ts","Services/middleware/socketMiddleware.ts","Components/header/header.tsx","pages/login/login.tsx","pages/registration/registration.tsx","pages/forgotPassword/forgot-password.tsx","pages/resetPassword/reset-password.tsx","utils/functions/isForgot.ts","Components/profileComponents/profileHeader/profile-header.tsx","Components/profileComponents/profileMain/profile-main.tsx","utils/functions/getDate.ts","utils/functions/getInfo.ts","utils/functions/getPrice.ts","Components/profileComponents/profileOrders/profile-orders.tsx","pages/profile/profile.tsx","Components/burgerIngridients/ingredientList/ingredient-list.tsx","Components/burgerIngridients/burger-ingredients.tsx","utils/functions/scrollFunction.ts","Components/orderDetails/order-details.tsx","Components/Modals/modalOverlay/modal-overlay.tsx","Components/Modals/modal/modal.tsx","Components/burgerConstructor/burger-constructor.tsx","pages/home/home.tsx","pages/ingredientPage/ingredient.tsx","Components/protectedRoute/protected-route.tsx","pages/404Page/not-found-page.tsx","Components/ingredientDetails/ingredient-details.tsx","Components/Modals/IngredientModal/IngredientModal.tsx","pages/Feed/feed.tsx","utils/functions/getText.ts","Components/orderIngredients/order-ingredients..tsx","utils/functions/getColour.ts","pages/Order/order.tsx","Components/Modals/orderModal/order-modal.tsx","Components/app/app.tsx","utils/functions/isAuth.ts","index.tsx","Components/burgerConstructor/burger-constructor.module.css","Components/burgerIngridients/burger-ingredients.module.css","pages/ingredientPage/ingredStyles.module.css","Components/ingredientDetails/ingredient-styles.module.css","Components/app/app.module.css","pages/login/login.module.css","pages/registration/register.module.css","Components/profileComponents/profileHeader/profile-header.module.css","Components/burgerIngridients/ingredientList/ingredient-list.module.css","Components/Modals/modal/modal-styles.module.css","pages/forgotPassword/forgot.module.css","pages/resetPassword/reset.module.css","pages/profile/profile.module.css","pages/404Page/not-found.module.css","pages/Feed/feed.module.css","Components/profileComponents/profileMain/profile-main.module.css","Components/Modals/modalOverlay/modal-overlay.module.css"],"names":["module","exports","checkResponse","res","ok","json","Promise","reject","status","getCookie","name","matches","document","cookie","match","RegExp","replace","decodeURIComponent","undefined","setCookie","value","props","exp","expires","d","Date","setTime","getTime","toUTCString","updatedCookie","encodeURIComponent","propName","propValue","deleteCookie","FORGOT_URL_REQUEST","FORGOT_URL_ERROR","FORGOT_URL_SUCCESS","REGIST_URL_REQUEST","REGIST_URL_ERROR","REGIST_URL_SUCCESS","ENTER_URL_REQUEST","ENTER_URL_ERROR","ENTER_URL_SUCCESS","RESET_URL_REQUEST","RESET_URL_ERROR","RESET_URL_SUCCESS","PROFILE_URL_REQUEST","PROFILE_URL_ERROR","PROFILE_URL_SUCCESS","LOGOUT_URL_REQUEST","LOGOUT_URL_ERROR","LOGOUT_URL_SUCCESS","UPDATE_URL_REQUEST","UPDATE_URL_ERROR","UPDATE_URL_SUCCESS","REFRESH_URL_REQUEST","REFRESH_URL_ERROR","REFRESH_URL_SUCCESS","SET_LOGOUT_DATA","IS_AUTH","SET_ORDER_INFO","SET_PERSON_ORDER_INFO","GET_ORDER_INFO_SUCCESS","GET_ORDER_INFO_ERROR","GET_ORDER_INFO_REQUEST","CLEAR_ORDER_INFO","profileRequest","baseURL","dispatch","type","fetch","method","headers","Authorization","then","result","data","catch","token","body","JSON","stringify","setNewToken","setOrderInfo","setPersonOrderInfo","getOrderInfo","url","e","console","error","SET_STATE","ADD_BUN","ADD_COMPONENT","CHANGE_BUN","SET_DATA","SET_ACTIVE","CLEAR_INFO","DRAG_ELEMENT","CHANGE_COMPONENTS","SET_ON_DRAG","SWAP_COMPONENTS","ORDER_URL_REQUEST","ORDER_URL_ERROR","ORDER_URL_SUCCESS","GET_INGREDIENTS_URL_REQUEST","GET_INGREDIENTS_URL_ERROR","GET_INGREDIENTS_URL_SUCCESS","SET_ORDER_ACTIVE","fetchData","refURL","setData","card","setActive","clearInfo","ingredients","arr","map","cards","dragElement","cart","isReady","cartData","replaceElement","underDraggedElement","components","buns","currentIndex","indexOf","splice","dropIndex","log","getOrder","fetchURL","ingredientIds","ingredient","_id","array","getNumberOrder","initialState","isOrderSend","isOrderSuccess","isOrderError","email","forgotRequestRequest","forgotRequestSuccess","forgotRequestError","resetRequestRequest","resetRequestSuccess","resetRequestError","profileRequestRequest","profileRequestSuccess","profileRequestError","enterRequestRequest","enterRequestSuccess","enterRequestError","registerRequestRequest","registerRequestSuccess","registerRequestError","logoutRequestRequest","logoutRequestSuccess","logoutRequestError","isLogout","isLogin","updateRequestRequest","updateRequestSuccess","updateRequestError","tokenRequestRequest","tokenRequestSuccess","tokenRequestError","ordersActive","personOrdersActive","getOrderInfoRequestRequest","getOrderInfoRequestSuccess","getOrderInfoRequestError","orderIngredientInfo","WS_CONNECTION_START","WS_CONNECTION_SUCCESS","WS_CONNECTION_ERROR","WS_CONNECTION_CLOSED","WS_CONNECTION_GET_MESSAGE","WS_CONNECTION_SEND_MESSAGE","WSUrl","payload","totalPrice","order","isActiv","isOrderActiv","cardData","orderInfo","draggedElement","isIngredientSend","isIngredientSuccess","isIngredientError","rootReducer","combineReducers","component","state","action","price","slice","index","length","element","orderData","requests","user","sockets","wsActions","wsInit","wsSendMessage","onOpen","onClose","onError","onMessage","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","wsUrl","store","socket","next","getState","WebSocket","onopen","event","onerror","onmessage","parsedData","parse","onclose","socketMiddleware","createStore","useSelector","selectorHook","useDispatch","dispatchHook","Header","location","useLocation","history","useHistory","useState","setType","useRouteMatch","useEffect","pathname","split","className","HeaderStyles","top","header","btnArea","constructorR","onClick","headerText","hoverText","orderList","logoDiv","logo","personalAccount","Login","password","setPassword","setEmail","to","from","loginStyles","mainContainer","formContainer","inputContainer","onSubmit","preventDefault","accessToken","refreshToken","enterRequest","placeholder","onChange","target","errorText","size","buttonContainer","push","Registration","setName","fromURL","registerStyle","registerRequest","ForgotPassword","forgot","setForgot","forgotStyles","commonContainer","forgotRequest","ResetPassword","setToken","resetStyles","resetRequest","ProfileHeader","profileHStyles","headContainer","pText","logoutRequest","descText","ProfileMain","nameV","emailV","myPass","profileMStyles","updateRequest","tabsContainer","getDate","date","time","toString","getInfo","id","i","getOrderPrice","j","ProfileOrders","path","strict","sensitive","shallowEqual","profileStyles","ordersContainer","orders","orderPosition","onActive","positionInfo","number","createdAt","desContainer","h2Header","priceLevel","orderIngredients","elem","pageContainer","src","image_mobile","width","height","alt","uuidv4","img","priceContainer","iconContainer","Profile","subRouterContainer","personOrderBackground","IngredientList","getCookieResp","background","cardStyle","cardArea","typeOfMeal","draggable","cardBox","onDrag","cardContainer","count","image","cardImage","constructBurger","BurgerIngredients","current","setCurrent","ingredientsBurger","appStyles","app_text","tabArea","active","menu","onScroll","scrollFunctionResp","block","getElementById","sauceBlock","bunsBlock","mainBlock","Math","abs","offsetTop","scrollTop","scrollFunction","cardList","OrderDetails","orderStyles","main","headDig","ident","done","doneMini","doneDiv","desc","ModalOverlay","overlayStyles","modalActive","Modal","refRoot","closeByEscape","key","addEventListener","removeEventListener","info","createPortal","modalStyles","modalContainer","modalContent","stopPropagation","topLevel","title","children","BurgerConstructor","isActive","isOrderActive","constStyles","area","orderArea","orderDropnDrag","onDrop","changeElement","increaseCounter","onDragOver","edgeElement","isLocked","text","thumbnail","middle","position","test","middleElement","handleClose","deleteElement","decreaseCounter","priceArea","disabled","Home","burgerIngredients","Ingredient","ingredientData","setIngredientData","idIngredient","ingredientStyles","ingredContainer","image_large","descriptionDiv","subDescription","calories","proteins","fat","carbohydrates","ProtectedRoute","rest","render","NotFoundPage","nfStyles","headerContainer","IngredientDetails","imageDiv","IngredientModal","Feed","feedStyles","page","section","orderBackground","priceBlock","orderNumbers","readyOrders","numbers","ordersInWork","ordersCounter","total","ordersPerDayCounter","totalToday","getText","OrderIngredients","copyData","setCopyData","setPrice","getInformation","ingredientCopyObject","orderStyle","dataContainer","orderNumber","orderName","orderStatus","ingredientsContainer","ingredientCard","photoContainer","photo","ingredientPriceContainer","otherInfo","Order","OrderModal","closeWindow","App","exact","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.9276b47f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"flexBlock\":\"header_flexBlock__1HdYc\",\"top\":\"header_top__11qvT header_flexBlock__1HdYc\",\"header\":\"header_header__1wLX7 header_flexBlock__1HdYc\",\"btnArea\":\"header_btnArea__G4UOn header_flexBlock__1HdYc\",\"constructorR\":\"header_constructorR__6QVS9 header_flexBlock__1HdYc\",\"orderList\":\"header_orderList__3EZ-5 header_flexBlock__1HdYc\",\"logo\":\"header_logo__1XWD6 header_flexBlock__1HdYc\",\"personalAccount\":\"header_personalAccount__1Myos header_flexBlock__1HdYc\",\"hoverText\":\"header_hoverText___XgQS\",\"logoDiv\":\"header_logoDiv__1x8Lb header_flexBlock__1HdYc\",\"headerText\":\"header_headerText__37BtR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dataContainer\":\"order_dataContainer__1zhcB\",\"page\":\"order_page__1_tGz\",\"orderNumber\":\"order_orderNumber__1djX2\",\"orderName\":\"order_orderName__5VVVW\",\"orderStatus\":\"order_orderStatus__1Fvrm\",\"orderIngredients\":\"order_orderIngredients__Cvmeu\",\"ingredientsContainer\":\"order_ingredientsContainer__1pS0P\",\"otherInfo\":\"order_otherInfo__2bXmK\",\"price\":\"order_price__3xtbU\",\"ingredientCard\":\"order_ingredientCard__3dX0x\",\"photoContainer\":\"order_photoContainer__1vAYX\",\"ingredientPriceContainer\":\"order_ingredientPriceContainer__38oGb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flexModel\":\"order-details_flexModel__3igu6\",\"main\":\"order-details_main__2vywZ order-details_flexModel__3igu6\",\"done\":\"order-details_done__3IKye order-details_flexModel__3igu6\",\"doneMini\":\"order-details_doneMini__LFGAg order-details_flexModel__3igu6\",\"doneDiv\":\"order-details_doneDiv__1IZ8a\",\"ident\":\"order-details_ident__3IZNR\",\"desc\":\"order-details_desc__qf2-G order-details_flexModel__3igu6\",\"headDig\":\"order-details_headDig__1dQX3 order-details_flexModel__3igu6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ordersContainer\":\"profile-orders_ordersContainer__2rdr4\",\"orders\":\"profile-orders_orders__2nXlE\",\"menu\":\"profile-orders_menu__ZDcOe\",\"orderInfo\":\"profile-orders_orderInfo__1S3Jd\",\"orderNumbers\":\"profile-orders_orderNumbers__uvnZI\",\"h2Header\":\"profile-orders_h2Header__10jYl\",\"ordersCounter\":\"profile-orders_ordersCounter__tfXqp\",\"ordersPerDayCounter\":\"profile-orders_ordersPerDayCounter__1dVCk\",\"numbers\":\"profile-orders_numbers__1WuAw\",\"orderPosition\":\"profile-orders_orderPosition__1AJfa\",\"positionInfo\":\"profile-orders_positionInfo__3D0OJ\",\"priceLevel\":\"profile-orders_priceLevel__F1-jA\",\"desContainer\":\"profile-orders_desContainer__v6KX_\",\"orderIngredients\":\"profile-orders_orderIngredients__1_EOT\",\"pageContainer\":\"profile-orders_pageContainer__nVu-j\",\"img\":\"profile-orders_img__P2-hw\",\"priceContainer\":\"profile-orders_priceContainer__1M71c\"};","export function checkResponse(res: Response): string | object {\n    if (res.ok) {\n        return res.json();\n    } else {\n        return Promise.reject(`Ошибка ${res.status}`);\n    }\n}\n","export function getCookie(name: string): undefined | string {\n    const matches = document.cookie.match(\n        new RegExp(\n            '(?:^|; )' + name.replace(/([$?*|{}\\]\\\\^])/g, '\\\\$1') + '=([^;]*)'\n        )\n    );\n    return matches ? decodeURIComponent(matches[1]) : undefined;\n}\n","export function setCookie(name: string, value: string, props: any): void {\n    props = props || {};\n    let exp: any = props.expires;\n    if (typeof exp == 'number' && exp) {\n        const d = new Date();\n        d.setTime(d.getTime() + exp * 1000);\n        exp = props.expires = d;\n    }\n    if (exp && exp.toUTCString) {\n        props.expires = exp.toUTCString();\n    }\n    value = encodeURIComponent(value);\n    let updatedCookie = name + '=' + value;\n    for (const propName in props) {\n        updatedCookie += '; ' + propName;\n        const propValue = props[propName];\n        if (propValue !== true) {\n            updatedCookie += '=' + propValue;\n        }\n    }\n    document.cookie = updatedCookie;\n}\n","export function deleteCookie(name: string): void {\n    document.cookie = name + '=;max-age=-1';\n}\n","import { checkResponse } from '../../../utils/functions/checkResponse';\nimport { getCookie } from '../../../utils/functions/cookieFunctions/getCookie';\nimport { setCookie } from '../../../utils/functions/cookieFunctions/setCookie';\nimport { deleteCookie } from '../../../utils/functions/cookieFunctions/deleteCookie';\nimport {\n    TOrder,\n    TOrderIngredients,\n    TOrderResponse,\n} from '../../../utils/types/types';\nimport { AppDispatch } from '../../../utils/types/store';\n\nexport const FORGOT_URL_REQUEST: 'FORGOT_URL_REQUEST' = 'FORGOT_URL_REQUEST';\nexport const FORGOT_URL_ERROR: 'FORGOT_URL_ERROR' = 'FORGOT_URL_ERROR';\nexport const FORGOT_URL_SUCCESS: 'FORGOT_URL_SUCCESS' = 'FORGOT_URL_SUCCESS';\nexport const REGIST_URL_REQUEST: 'REGIST_URL_REQUEST' = 'REGIST_URL_REQUEST';\nexport const REGIST_URL_ERROR: 'REGIST_URL_ERROR' = 'REGIST_URL_ERROR';\nexport const REGIST_URL_SUCCESS: 'REGIST_URL_SUCCESS' = 'REGIST_URL_SUCCESS';\nexport const ENTER_URL_REQUEST: 'ENTER_URL_REQUEST' = 'ENTER_URL_REQUEST';\nexport const ENTER_URL_ERROR: 'ENTER_URL_ERROR' = 'ENTER_URL_ERROR';\nexport const ENTER_URL_SUCCESS: 'ENTER_URL_SUCCESS' = 'ENTER_URL_SUCCESS';\nexport const RESET_URL_REQUEST: 'RESET_URL_REQUEST' = 'RESET_URL_REQUEST';\nexport const RESET_URL_ERROR: 'RESET_URL_ERROR' = 'RESET_URL_ERROR';\nexport const RESET_URL_SUCCESS: 'RESET_URL_SUCCESS' = 'RESET_URL_SUCCESS';\nexport const PROFILE_URL_REQUEST: 'PROFILE_URL_REQUEST' = 'PROFILE_URL_REQUEST';\nexport const PROFILE_URL_ERROR: 'PROFILE_URL_ERROR' = 'PROFILE_URL_ERROR';\nexport const PROFILE_URL_SUCCESS: 'PROFILE_URL_SUCCESS' = 'PROFILE_URL_SUCCESS';\nexport const LOGOUT_URL_REQUEST: 'LOGOUT_URL_REQUEST' = 'LOGOUT_URL_REQUEST';\nexport const LOGOUT_URL_ERROR: 'LOGOUT_URL_ERROR' = 'LOGOUT_URL_ERROR';\nexport const LOGOUT_URL_SUCCESS: 'LOGOUT_URL_SUCCESS' = 'LOGOUT_URL_SUCCESS';\nexport const UPDATE_URL_REQUEST: 'UPDATE_URL_REQUEST' = 'UPDATE_URL_REQUEST';\nexport const UPDATE_URL_ERROR: 'UPDATE_URL_ERROR' = 'UPDATE_URL_ERROR';\nexport const UPDATE_URL_SUCCESS: 'UPDATE_URL_SUCCESS' = 'UPDATE_URL_SUCCESS';\nexport const REFRESH_URL_REQUEST: 'REFRESH_URL_REQUEST' = 'REFRESH_URL_REQUEST';\nexport const REFRESH_URL_ERROR: 'REFRESH_URL_ERROR' = 'REFRESH_URL_ERROR';\nexport const REFRESH_URL_SUCCESS: 'REFRESH_URL_SUCCESS' = 'REFRESH_URL_SUCCESS';\nexport const SET_LOGOUT_DATA: 'SET_LOGOUT_DATA' = 'SET_LOGOUT_DATA';\nexport const IS_AUTH: 'IS_AUTH' = 'IS_AUTH';\nexport const SET_ORDER_INFO: 'SET_ORDER_INFO' = 'SET_ORDER_INFO';\nexport const SET_PERSON_ORDER_INFO: 'SET_PERSON_ORDER_INFO' =\n    'SET_PERSON_ORDER_INFO';\nexport const GET_ORDER_INFO_SUCCESS: 'GET_ORDER_INFO_SUCCESS' =\n    'GET_ORDER_INFO_SUCCESS';\nexport const GET_ORDER_INFO_ERROR: 'GET_ORDER_INFO_ERROR' =\n    'GET_ORDER_INFO_ERROR';\nexport const GET_ORDER_INFO_REQUEST: 'GET_ORDER_INFO_REQUEST' =\n    'GET_ORDER_INFO_REQUEST';\nexport const CLEAR_ORDER_INFO: 'CLEAR_ORDER_INFO' = 'CLEAR_ORDER_INFO';\n\n//функция на сброс пароля\nexport function forgotRequest(baseURL: string, data: string) {\n    return function (dispatch: AppDispatch) {\n        dispatch({\n            type: FORGOT_URL_REQUEST,\n        });\n        fetch(baseURL + '/password-reset', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8',\n            },\n            body: JSON.stringify({ email: data }),\n        })\n            .then(checkResponse)\n            .then(() => {\n                // setCookie('forgot', 'ok');\n                dispatch({ type: FORGOT_URL_SUCCESS });\n            })\n            .catch(() => {\n                dispatch({ type: FORGOT_URL_ERROR });\n            });\n    };\n}\n//функция на установления нового запроса\nexport function registerRequest(\n    email: string,\n    password: string,\n    name: string,\n    baseURL: string\n) {\n    return function (dispatch: AppDispatch) {\n        dispatch({\n            type: REGIST_URL_REQUEST,\n        });\n        fetch(baseURL + '/auth/register', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8',\n            },\n            body: JSON.stringify({\n                email: email,\n                password: password,\n                name: name,\n            }),\n        })\n            .then(checkResponse)\n            .then((data: any) => {\n                setCookie(\n                    'accessToken',\n                    data.accessToken.split(' ')[1],\n                    undefined\n                );\n                setCookie('refreshToken', data.refreshToken, undefined);\n                setCookie('password', password, undefined);\n                dispatch({ type: REGIST_URL_SUCCESS });\n            })\n            .catch(() => dispatch({ type: REGIST_URL_ERROR }));\n    };\n}\n\n//функция на установления нового запроса\nexport function enterRequest(email: string, password: string, baseURL: string) {\n    return function (dispatch: AppDispatch) {\n        dispatch({\n            type: ENTER_URL_REQUEST,\n        });\n        fetch(baseURL + '/auth/login', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8',\n            },\n            body: JSON.stringify({\n                email: email,\n                password: password,\n            }),\n        })\n            .then(checkResponse)\n            .then((data: any) => {\n                setCookie(\n                    'accessToken',\n                    data.accessToken.split(' ')[1],\n                    undefined\n                );\n                setCookie('refreshToken', data.refreshToken, undefined);\n                setCookie('password', password, undefined);\n                dispatch({ type: ENTER_URL_SUCCESS });\n            })\n            .catch((e) => {\n                console.error(e);\n                dispatch({ type: ENTER_URL_ERROR });\n            });\n    };\n}\n\n//функция на установления нового запроса\nexport function resetRequest(password: string, token: string, baseURL: string) {\n    return function (dispatch: AppDispatch) {\n        dispatch({\n            type: RESET_URL_REQUEST,\n        });\n        fetch(baseURL + '/password-reset/reset', {\n            method: 'POST',\n\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8',\n            },\n            body: JSON.stringify({\n                password: password,\n                token: token,\n            }),\n        })\n            .then(checkResponse)\n            .then(() => {\n                // document.cookie = 'forgot=;max-age=-1';\n                dispatch({ type: RESET_URL_SUCCESS });\n            })\n            .catch(() => dispatch({ type: RESET_URL_ERROR }));\n    };\n}\n\nexport function profileRequest(baseURL: string) {\n    return function (dispatch: AppDispatch) {\n        dispatch({\n            type: PROFILE_URL_REQUEST,\n        });\n        fetch(baseURL + '/auth/user', {\n            method: 'GET',\n            headers: {\n                Authorization: 'Bearer ' + getCookie('accessToken'),\n                'Content-Type': 'application/json;charset=utf-8',\n            },\n        })\n            .then(checkResponse)\n            .then((result) => {\n                dispatch({\n                    type: PROFILE_URL_SUCCESS,\n                    data: result,\n                });\n            })\n            .catch(() => {\n                dispatch({ type: PROFILE_URL_ERROR });\n                dispatch(setNewToken(getCookie('refreshToken'), baseURL));\n            });\n    };\n}\n\nfunction setNewToken(token: string | undefined, baseURL: string) {\n    return function (dispatch: AppDispatch) {\n        dispatch({\n            type: REFRESH_URL_REQUEST,\n        });\n        fetch(baseURL + '/auth/token', {\n            method: 'POST',\n\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8',\n            },\n            body: JSON.stringify({\n                token: token,\n            }),\n        })\n            .then(checkResponse)\n            .then(() => {\n                // console.log(\n                //     'Old token ' +\n                //         getCookie('accessToken') +\n                //         '  New token: ' +\n                //         data.accessToken.split(' ')[1]\n                // );\n                deleteCookie('accessToken');\n                deleteCookie('refreshToken');\n                deleteCookie('password');\n                deleteCookie('forgot');\n\n                dispatch({ type: REFRESH_URL_SUCCESS });\n            })\n            .catch(() => dispatch({ type: REFRESH_URL_ERROR }));\n    };\n}\n\n//функция на сброс пароля\nexport function logoutRequest(baseURL: string) {\n    return function (dispatch: AppDispatch) {\n        dispatch({\n            type: LOGOUT_URL_REQUEST,\n        });\n        fetch(baseURL + '/auth/logout', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8',\n            },\n            body: JSON.stringify({\n                token: getCookie('refreshToken'),\n            }),\n        })\n            .then(checkResponse)\n            .then(() => {\n                // console.log(data);\n\n                deleteCookie('accessToken');\n                deleteCookie('refreshToken');\n                deleteCookie('password');\n                deleteCookie('forgot');\n\n                dispatch({ type: LOGOUT_URL_SUCCESS });\n            })\n            .catch(() => dispatch({ type: LOGOUT_URL_ERROR }));\n    };\n}\n\n//функция на обновление данных\nexport function updateRequest(\n    baseURL: string,\n    name: string,\n    email: string,\n    password: string\n) {\n    return function (dispatch: AppDispatch) {\n        dispatch({\n            type: UPDATE_URL_REQUEST,\n        });\n        fetch(baseURL + '/auth/user', {\n            method: 'PATCH',\n            headers: {\n                Authorization: 'Bearer ' + getCookie('accessToken'),\n                'Content-Type': 'application/json;charset=utf-8',\n            },\n            body: JSON.stringify({\n                name: name,\n                email: email,\n                password: password,\n            }),\n        })\n            .then(checkResponse)\n            .then((data) => {\n                // console.log(data);\n                dispatch({ type: UPDATE_URL_SUCCESS, data: data });\n            })\n            .catch(() => dispatch({ type: UPDATE_URL_ERROR }));\n    };\n}\n\n//функция на обновление данных\nexport function setLogoutData() {\n    return function (dispatch: AppDispatch) {\n        dispatch({ type: SET_LOGOUT_DATA });\n    };\n}\n\n//функция на обновление данных\nexport function clearForgotCookie() {\n    return function (dispatch: AppDispatch) {\n        document.cookie = 'forgot=;max-age=-1';\n    };\n}\n\nexport function setOrderInfo(data: TOrderIngredients | undefined) {\n    return function (dispatch: AppDispatch) {\n        dispatch({ type: SET_ORDER_INFO, data: data });\n    };\n}\n\nexport function setPersonOrderInfo(data: TOrderIngredients | undefined) {\n    return function (dispatch: AppDispatch) {\n        dispatch({ type: SET_PERSON_ORDER_INFO, data: data });\n    };\n}\n\nexport function getOrderInfo(url: string) {\n    return function (dispatch: AppDispatch) {\n        // console.log(url);\n        dispatch({ type: GET_ORDER_INFO_REQUEST });\n        fetch(url)\n            .then(checkResponse)\n            .then((result: any) => {\n                dispatch({ type: GET_ORDER_INFO_SUCCESS, data: result });\n            })\n            .catch((e) => {\n                dispatch({ type: GET_ORDER_INFO_ERROR });\n                console.error(e);\n            });\n    };\n}\n\nexport function clearOrderInfo() {\n    return function (dispatch: AppDispatch) {\n        dispatch({ type: CLEAR_ORDER_INFO });\n    };\n}\n","import { checkResponse } from '../../../utils/functions/checkResponse';\nimport { getCookie } from '../../../utils/functions/cookieFunctions/getCookie';\nimport { TCard, TOrder } from '../../../utils/types/types';\nimport { AppDispatch } from '../../../utils/types/store';\nexport const SET_STATE: 'SET_STATE' = 'SET_STATE';\nexport const ADD_BUN: 'ADD_BUN' = 'ADD_BUN';\nexport const ADD_COMPONENT: 'ADD_COMPONENT' = 'ADD_COMPONENT';\nexport const CHANGE_BUN: 'CHANGE_BUN' = 'CHANGE_BUN';\nexport const SET_DATA: 'SET_DATA' = 'SET_DATA';\nexport const SET_ACTIVE: 'SET_ACTIVE' = 'SET_ACTIVE';\nexport const CLEAR_INFO: 'CLEAR_INFO' = 'CLEAR_INFO';\nexport const DRAG_ELEMENT: 'DRAG_ELEMENT' = 'DRAG_ELEMENT';\nexport const CHANGE_COMPONENTS: 'CHANGE_COMPONENTS' = 'CHANGE_COMPONENTS';\nexport const SET_ON_DRAG: 'SET_ON_DRAG' = 'SET_ON_DRAG';\nexport const SWAP_COMPONENTS: 'SWAP_COMPONENTS' = 'SWAP_COMPONENTS';\nexport const CHANGE_SWAP: 'CHANGE_SWAP' = 'CHANGE_SWAP';\nexport const ORDER_URL_REQUEST: 'ORDER_URL_REQUEST' = 'ORDER_URL_REQUEST';\nexport const ORDER_URL_ERROR: 'ORDER_URL_ERROR' = 'ORDER_URL_ERROR';\nexport const ORDER_URL_SUCCESS: 'ORDER_URL_SUCCESS' = 'ORDER_URL_SUCCESS';\nexport const GET_INGREDIENTS_URL_REQUEST: 'GET_INGREDIENTS_URL_REQUEST' =\n    'GET_INGREDIENTS_URL_REQUEST';\nexport const GET_INGREDIENTS_URL_ERROR: 'GET_INGREDIENTS_URL_ERROR' =\n    'GET_INGREDIENTS_URL_ERROR';\nexport const GET_INGREDIENTS_URL_SUCCESS: 'GET_INGREDIENTS_URL_SUCCESS' =\n    'GET_INGREDIENTS_URL_SUCCESS';\nexport const SET_ORDER_INFO: 'SET_ORDER_INFO' = 'SET_ORDER_INFO';\nexport const SET_ORDER_ACTIVE: 'SET_ORDER_ACTIVE' = 'SET_ORDER_ACTIVE';\n\n//fetch - функция для получения данных\nexport function fetchData(refURL: string) {\n    return function (dispatch: AppDispatch) {\n        dispatch({\n            type: GET_INGREDIENTS_URL_REQUEST,\n        });\n        fetch(refURL)\n            .then(checkResponse)\n            .then((result: any) => {\n                //<--- TCard | string | undefined, но не работает\n                dispatch({\n                    type: GET_INGREDIENTS_URL_SUCCESS,\n                    data: result.data,\n                });\n            })\n            .catch(() => dispatch({ type: GET_INGREDIENTS_URL_ERROR }));\n    };\n}\n\n//установка данных карты\nexport function setData(card: TCard | null) {\n    return function (dispatch: AppDispatch) {\n        // document.cookie = 'data=' + JSON.stringify(card) + '; path=/;';\n        dispatch({ type: SET_DATA, data: card });\n    };\n}\n\n//изменение статуса активности модального окна\nexport function setActive(data: boolean) {\n    return function (dispatch: AppDispatch) {\n        dispatch({ type: SET_ACTIVE, value: data });\n    };\n}\n\n//функция удаления всего заказа\nexport function clearInfo(ingredients: TCard[]) {\n    return function (dispatch: AppDispatch) {\n        let arr = ingredients.map((cards: TCard) => {\n            cards['__v'] = 0;\n            return cards;\n        });\n\n        dispatch({ type: CLEAR_INFO, data: arr });\n        dispatch({ type: SET_ORDER_ACTIVE, data: false });\n    };\n}\n\n//функция получения номера заказа\nexport function getNumberOrder(array: string[], fetchURL: string) {\n    return function (dispatch: AppDispatch) {\n        dispatch({\n            type: ORDER_URL_REQUEST,\n        });\n        fetch(fetchURL, {\n            method: 'POST',\n            headers: {\n                Authorization: 'Bearer ' + getCookie('accessToken'),\n                'Content-Type': 'application/json;charset=utf-8',\n            },\n            body: JSON.stringify({ ingredients: array }),\n        })\n            .then(checkResponse)\n            .then((data) => {\n                // console.log(data);\n                dispatch({ type: ORDER_URL_SUCCESS });\n                dispatch({ type: SET_ORDER_INFO, data: data });\n            })\n            .catch(() => dispatch({ type: ORDER_URL_ERROR }));\n    };\n}\n\n// запись перетаскиваемого элемента\nexport function dragElement(cards: TCard, cart: string, isReady: boolean) {\n    return function (dispatch: AppDispatch) {\n        // console.log(cart);\n        dispatch({\n            type: DRAG_ELEMENT,\n            data: cards,\n            cartData: cart,\n            isReady: isReady,\n        });\n    };\n}\n\n//функция изменения счётчика ингредиентов\nexport function increaseCounter(changeElement: TCard, ingredients: TCard[]) {\n    return function (dispatch: AppDispatch) {\n        let arr: TCard[];\n        if (changeElement.type === 'bun') {\n            arr = ingredients.map((cards: TCard) => {\n                if (cards.type === 'bun') {\n                    cards['__v'] = 0;\n                }\n                return cards;\n            });\n        }\n        arr = ingredients.map((cards: TCard) => {\n            if (cards['_id'] === changeElement['_id']) {\n                if (changeElement.type === 'bun') {\n                    cards['__v'] += 2;\n                } else {\n                    cards['__v']++;\n                }\n            }\n\n            return cards;\n        });\n        dispatch({ type: SET_STATE, data: arr });\n    };\n}\n\nexport function decreaseCounter(changeElement: TCard, ingredients: TCard[]) {\n    return function (dispatch: AppDispatch) {\n        let arr: TCard[] = ingredients.map((cards) => {\n            if (cards['_id'] === changeElement['_id']) {\n                cards['__v']--;\n            }\n\n            return cards;\n        });\n        dispatch({ type: SET_STATE, data: arr });\n    };\n}\n//функция перетаскивания элемента при бросании\nexport function replaceElement(\n    dragElement: TCard,\n    underDraggedElement: TCard,\n    components: TCard[],\n    buns: TCard,\n    cart: string,\n    isReady: boolean\n) {\n    return function (dispatch: AppDispatch) {\n        if (cart === 'ingredients') {\n            dragElement && dragElement.type === 'bun'\n                ? buns\n                    ? dispatch({\n                          type: CHANGE_BUN,\n                          data: dragElement,\n                      })\n                    : dispatch({ type: ADD_BUN, data: dragElement })\n                : dispatch({\n                      type: ADD_COMPONENT,\n                      data: dragElement,\n                  });\n        } else {\n            if (!isReady) {\n                const currentIndex: number = components.indexOf(dragElement);\n                const dropInd: number = components.indexOf(underDraggedElement);\n                if (currentIndex < dropInd) {\n                    // console.log(\n                    //     'DOWN\\ndropInd: ' + dropInd + '\\nCurrent' + currentIndex\n                    // );\n                    components.splice(currentIndex, 1);\n                    const dropIndex: number =\n                        components.indexOf(underDraggedElement);\n                    components.splice(dropIndex + 1, 0, dragElement);\n                } else {\n                    // console.log(\n                    //     'UP\\ndropInd: ' + dropInd + '\\nCurrent' + currentIndex\n                    // );\n                    components.splice(currentIndex, 1);\n                    const dropIndex: number =\n                        components.indexOf(underDraggedElement);\n                    components.splice(dropIndex, 0, dragElement);\n                }\n                console.log(components);\n                dispatch({\n                    type: SWAP_COMPONENTS,\n                    data: components,\n                    isReady: true,\n                });\n            }\n        }\n    };\n}\n\n//функция записи элемента, лежащего под перетаскиваемым\nexport function setDragOver(card: TCard) {\n    return function (dispatch: AppDispatch) {\n        dispatch({ type: SET_ON_DRAG, data: card });\n    };\n}\n\nexport function deleteElement(\n    index: number,\n    changeElement: TCard,\n    ingredients: TCard[],\n    length: number\n) {\n    return function (dispatch: AppDispatch) {\n        dispatch({\n            type: CHANGE_COMPONENTS,\n            index: index,\n            length: length,\n            element: changeElement,\n        });\n    };\n}\n\nexport function getOrder(buns: TCard, components: TCard[], fetchURL: string) {\n    return function (dispatch: AppDispatch) {\n        const ingredients = [buns, ...components, buns];\n        const ingredientIds = ingredients.map(\n            (ingredient: TCard) => ingredient._id\n        );\n        dispatch(getNumberOrder(ingredientIds, fetchURL));\n        dispatch(setActive(true));\n        dispatch({ type: SET_ORDER_ACTIVE, data: true });\n    };\n}\n","import {\n    ORDER_URL_ERROR,\n    ORDER_URL_SUCCESS,\n    ORDER_URL_REQUEST,\n} from '../../actions/componentAction/components';\nimport { TComponentsActions } from '../../../utils/types/actionComponentsTypes';\n\nexport type TOrderState = {\n    isOrderSend: boolean;\n    isOrderSuccess: boolean;\n    isOrderError: boolean;\n};\nconst initialState: TOrderState = {\n    //отправка запроса\n    isOrderSend: false,\n\n    //успех запроса\n    isOrderSuccess: false,\n\n    //ошибка в запросе\n    isOrderError: false,\n};\n\nexport const orderReducer = (\n    state: TOrderState = initialState,\n    action: TComponentsActions\n): TOrderState => {\n    switch (action.type) {\n        case ORDER_URL_REQUEST: {\n            return {\n                ...state,\n                isOrderError: false,\n                isOrderSuccess: false,\n                isOrderSend: true,\n            };\n        }\n\n        case ORDER_URL_SUCCESS: {\n            return {\n                ...state,\n                isOrderSend: false,\n                isOrderError: false,\n                isOrderSuccess: true,\n            };\n        }\n\n        case ORDER_URL_ERROR: {\n            return {\n                ...state,\n                isOrderSend: false,\n                isOrderError: true,\n                isOrderSuccess: false,\n            };\n        }\n\n        //иное\n        default: {\n            return state;\n        }\n    }\n};\n","import {\n    CLEAR_ORDER_INFO,\n    ENTER_URL_ERROR,\n    ENTER_URL_REQUEST,\n    ENTER_URL_SUCCESS,\n    FORGOT_URL_ERROR,\n    FORGOT_URL_REQUEST,\n    FORGOT_URL_SUCCESS,\n    GET_ORDER_INFO_ERROR,\n    GET_ORDER_INFO_REQUEST,\n    GET_ORDER_INFO_SUCCESS,\n    IS_AUTH,\n    LOGOUT_URL_ERROR,\n    LOGOUT_URL_REQUEST,\n    LOGOUT_URL_SUCCESS,\n    PROFILE_URL_ERROR,\n    PROFILE_URL_REQUEST,\n    PROFILE_URL_SUCCESS,\n    REFRESH_URL_ERROR,\n    REFRESH_URL_REQUEST,\n    REFRESH_URL_SUCCESS,\n    REGIST_URL_ERROR,\n    REGIST_URL_REQUEST,\n    REGIST_URL_SUCCESS,\n    RESET_URL_ERROR,\n    RESET_URL_REQUEST,\n    RESET_URL_SUCCESS,\n    SET_LOGOUT_DATA,\n    SET_ORDER_INFO,\n    SET_PERSON_ORDER_INFO,\n    UPDATE_URL_ERROR,\n    UPDATE_URL_REQUEST,\n    UPDATE_URL_SUCCESS,\n} from '../../actions/requestAction/requestsActions';\n\nimport { TRequestActions } from '../../../utils/types/actionRequestsTypes';\nimport { TOrderIngredients, TOrderResponse } from '../../../utils/types/types';\n\nexport type TRequestsReducer = {\n    email: string;\n    name: string;\n    forgotRequestRequest: boolean;\n    forgotRequestSuccess: boolean;\n    forgotRequestError: boolean;\n    resetRequestRequest: boolean;\n    resetRequestSuccess: boolean;\n    resetRequestError: boolean;\n    profileRequestRequest: boolean;\n    profileRequestSuccess: boolean;\n    profileRequestError: boolean;\n    enterRequestRequest: boolean;\n    enterRequestSuccess: boolean;\n    enterRequestError: boolean;\n    registerRequestRequest: boolean;\n    registerRequestSuccess: boolean;\n    registerRequestError: boolean;\n    logoutRequestRequest: boolean;\n    logoutRequestSuccess: boolean;\n    logoutRequestError: boolean;\n    isLogout: boolean;\n    isLogin: boolean;\n    updateRequestRequest: boolean;\n    updateRequestSuccess: boolean;\n    updateRequestError: boolean;\n    getOrderInfoRequestRequest: boolean;\n    getOrderInfoRequestSuccess: boolean;\n    getOrderInfoRequestError: boolean;\n    tokenRequestRequest: boolean;\n    tokenRequestSuccess: boolean;\n    tokenRequestError: boolean;\n    baseURL: string;\n    ordersActive: undefined | TOrderIngredients;\n    personOrdersActive: undefined | TOrderIngredients;\n    orderIngredientInfo: TOrderResponse | undefined;\n};\n\nconst initialState: TRequestsReducer = {\n    //логин пользователя\n    email: '',\n\n    //имя пользователя\n    name: '',\n\n    //блок страницы /forgot-password\n    //отправка запроса на сброс пароля\n    forgotRequestRequest: false,\n\n    //успех запроса на сброс пароля\n    forgotRequestSuccess: false,\n\n    //ошибка в запросе на сброс пароля\n    forgotRequestError: false,\n\n    //блок страницы /reset-password\n    //отправка запроса на регистрацию\n    resetRequestRequest: false,\n\n    //успех запроса на регистрацию\n    resetRequestSuccess: false,\n\n    //ошибка в запросе на регистрацию\n    resetRequestError: false,\n\n    //отправка запроса на регистрацию\n    profileRequestRequest: false,\n\n    //успех запроса на регистрацию\n    profileRequestSuccess: false,\n\n    //ошибка в запросе на регистрацию\n    profileRequestError: false,\n\n    //блок страницы /login\n    //отправка запроса на вход пользователя\n    enterRequestRequest: false,\n\n    //успех запроса на вход пользователя\n    enterRequestSuccess: false,\n\n    //ошибка в запросе на вход пользователя\n    enterRequestError: false,\n\n    //блок страницы /register\n    //отправка запроса на регистрацию\n    registerRequestRequest: false,\n\n    //успех запроса на регистрацию\n    registerRequestSuccess: false,\n\n    //ошибка в запросе на регистрацию\n    registerRequestError: false,\n\n    //блок страницы /logout\n    //отправка запроса на регистрацию\n    logoutRequestRequest: false,\n\n    //успех запроса на регистрацию\n    logoutRequestSuccess: false,\n\n    //ошибка в запросе на регистрацию\n    logoutRequestError: false,\n\n    isLogout: false,\n\n    isLogin: false,\n\n    //блок страницы /logout\n    //отправка запроса на регистрацию\n    updateRequestRequest: false,\n\n    //успех запроса на регистрацию\n    updateRequestSuccess: false,\n\n    //ошибка в запросе на регистрацию\n    updateRequestError: false,\n\n    //блок страницы /token\n    //отправка запроса на регистрацию\n    tokenRequestRequest: false,\n\n    //успех запроса на регистрацию\n    tokenRequestSuccess: false,\n\n    //ошибка в запросе на регистрацию\n    tokenRequestError: false,\n\n    //блок эндпоинтов\n    //общая часть ссылки\n    baseURL: 'https://norma.nomoreparties.space/api',\n\n    //состав заказа, доступный всем\n    ordersActive: undefined,\n\n    //состав заказа личного\n    personOrdersActive: undefined,\n\n    //запрос о составе заказа отправлен\n    getOrderInfoRequestRequest: false,\n\n    //запрос о составе заказа получен успешно\n    getOrderInfoRequestSuccess: false,\n\n    //запрос о составе заказа - ошибка\n    getOrderInfoRequestError: false,\n\n    //подробная информация о заказе и его номере\n    orderIngredientInfo: undefined,\n};\n\nexport const requestsReducer = (\n    state: TRequestsReducer = initialState,\n    action: TRequestActions\n): TRequestsReducer => {\n    switch (action.type) {\n        //запрос на сброс пароля\n        case FORGOT_URL_REQUEST: {\n            return {\n                ...state,\n                forgotRequestError: false,\n                forgotRequestSuccess: false,\n                forgotRequestRequest: true,\n            };\n        }\n\n        //успешный запрос на сброс пароля\n        case FORGOT_URL_SUCCESS: {\n            return {\n                ...state,\n                forgotRequestRequest: false,\n                forgotRequestError: false,\n                forgotRequestSuccess: true,\n            };\n        }\n\n        //неудачный запрос на сброс пароля\n        case FORGOT_URL_ERROR: {\n            return {\n                ...state,\n                forgotRequestRequest: false,\n                forgotRequestError: true,\n                forgotRequestSuccess: false,\n            };\n        }\n\n        case IS_AUTH: {\n            return {\n                ...state,\n                isLogin: action.data,\n            };\n        }\n        //запрос на восстановление пароля на регистрацию\n        case REGIST_URL_REQUEST: {\n            return {\n                ...state,\n                registerRequestError: false,\n                registerRequestSuccess: false,\n                registerRequestRequest: true,\n            };\n        }\n\n        //успешный запрос на регистрацию\n        case REGIST_URL_SUCCESS: {\n            return {\n                ...state,\n                isLogin: true,\n                isLogout: false,\n                registerRequestRequest: false,\n                registerRequestError: false,\n                registerRequestSuccess: true,\n            };\n        }\n\n        //неудачный запрос на регистрацию\n        case REGIST_URL_ERROR: {\n            return {\n                ...state,\n                registerRequestRequest: false,\n                registerRequestError: true,\n                registerRequestSuccess: false,\n            };\n        }\n\n        //запрос на восстановление пароля на авторизацию\n        case ENTER_URL_REQUEST: {\n            return {\n                ...state,\n                enterRequestError: false,\n                enterRequestSuccess: false,\n                enterRequestRequest: true,\n            };\n        }\n\n        //успешный запрос на авторизацию\n        case ENTER_URL_SUCCESS: {\n            return {\n                ...state,\n                isLogout: false,\n                isLogin: true,\n                enterRequestRequest: false,\n                enterRequestError: false,\n                enterRequestSuccess: true,\n            };\n        }\n\n        //неудачный запрос на авторизацию\n        case ENTER_URL_ERROR: {\n            return {\n                ...state,\n                enterRequestRequest: false,\n                enterRequestError: true,\n                enterRequestSuccess: false,\n            };\n        }\n\n        //запрос на восстановление пароля на регистрацию\n        case RESET_URL_REQUEST: {\n            return {\n                ...state,\n                resetRequestError: false,\n                resetRequestSuccess: false,\n                resetRequestRequest: true,\n            };\n        }\n\n        //успешный запрос на восстановление пароля\n        case RESET_URL_SUCCESS: {\n            return {\n                ...state,\n                resetRequestRequest: false,\n                resetRequestError: false,\n                resetRequestSuccess: true,\n            };\n        }\n\n        //неудачный запрос на восстановление пароля\n        case RESET_URL_ERROR: {\n            return {\n                ...state,\n                resetRequestRequest: false,\n                resetRequestError: true,\n                resetRequestSuccess: false,\n            };\n        }\n        //запрос на выход\n        case LOGOUT_URL_REQUEST: {\n            return {\n                ...state,\n                isLogin: false,\n                logoutRequestError: false,\n                logoutRequestSuccess: false,\n                logoutRequestRequest: true,\n            };\n        }\n\n        //запрос на выход\n        case SET_LOGOUT_DATA: {\n            return {\n                ...state,\n                logoutRequestError: false,\n                logoutRequestSuccess: false,\n                logoutRequestRequest: false,\n            };\n        }\n\n        //успешный запрос на выход\n        case LOGOUT_URL_SUCCESS: {\n            return {\n                ...state,\n                email: '',\n                name: '',\n                isLogout: true,\n                isLogin: false,\n                logoutRequestRequest: false,\n                logoutRequestError: false,\n                logoutRequestSuccess: true,\n            };\n        }\n\n        //неудачный запрос навыход\n        case LOGOUT_URL_ERROR: {\n            return {\n                ...state,\n                logoutRequestRequest: false,\n                logoutRequestError: true,\n                logoutRequestSuccess: false,\n            };\n        }\n\n        //запрос на получение данных\n        case PROFILE_URL_REQUEST: {\n            return {\n                ...state,\n                profileRequestError: false,\n                profileRequestSuccess: false,\n                profileRequestRequest: true,\n            };\n        }\n\n        //успешный запрос на получение данных\n        case PROFILE_URL_SUCCESS: {\n            return {\n                ...state,\n                email: action.data.user.email,\n                name: action.data.user.name,\n                profileRequestRequest: false,\n                profileRequestError: false,\n                profileRequestSuccess: true,\n            };\n        }\n\n        //неудачный запрос на получение данных\n        case PROFILE_URL_ERROR: {\n            return {\n                ...state,\n                profileRequestRequest: false,\n                profileRequestError: true,\n                profileRequestSuccess: false,\n            };\n        }\n\n        //запрос на обновление данных\n        case UPDATE_URL_REQUEST: {\n            return {\n                ...state,\n                updateRequestError: false,\n                updateRequestSuccess: false,\n                updateRequestRequest: true,\n            };\n        }\n\n        //успешный запрос на обновление данных\n        case UPDATE_URL_SUCCESS: {\n            return {\n                ...state,\n                email: action.data.user.email,\n                name: action.data.user.name,\n                updateRequestRequest: false,\n                updateRequestError: false,\n                updateRequestSuccess: true,\n            };\n        }\n\n        //неудачный запрос на обновление данных\n        case UPDATE_URL_ERROR: {\n            return {\n                ...state,\n                updateRequestRequest: false,\n                updateRequestError: true,\n                updateRequestSuccess: false,\n            };\n        }\n\n        //запрос на обновление данных\n        case REFRESH_URL_REQUEST: {\n            return {\n                ...state,\n                tokenRequestError: false,\n                tokenRequestSuccess: false,\n                tokenRequestRequest: true,\n            };\n        }\n\n        //успешный запрос на обновление данных\n        case REFRESH_URL_SUCCESS: {\n            return {\n                ...state,\n                tokenRequestRequest: false,\n                tokenRequestError: false,\n                tokenRequestSuccess: true,\n            };\n        }\n\n        //неудачный запрос на обновление данных\n        case REFRESH_URL_ERROR: {\n            return {\n                ...state,\n                tokenRequestRequest: false,\n                tokenRequestError: true,\n                tokenRequestSuccess: false,\n            };\n        }\n\n        //запрос подробного состава заказа\n        case GET_ORDER_INFO_REQUEST: {\n            return {\n                ...state,\n                getOrderInfoRequestError: false,\n                getOrderInfoRequestSuccess: false,\n                getOrderInfoRequestRequest: true,\n            };\n        }\n\n        //успешный запрос подробного получения состава заказа\n        case GET_ORDER_INFO_SUCCESS: {\n            return {\n                ...state,\n                orderIngredientInfo: action.data,\n                getOrderInfoRequestRequest: false,\n                getOrderInfoRequestError: false,\n                getOrderInfoRequestSuccess: true,\n            };\n        }\n\n        //неудачный запрос подробного получения состава заказа\n        case GET_ORDER_INFO_ERROR: {\n            return {\n                ...state,\n                getOrderInfoRequestRequest: false,\n                getOrderInfoRequestError: true,\n                getOrderInfoRequestSuccess: false,\n            };\n        }\n\n        case CLEAR_ORDER_INFO: {\n            return {\n                ...state,\n                orderIngredientInfo: undefined,\n            };\n        }\n\n        case SET_ORDER_INFO: {\n            return {\n                ...state,\n                ordersActive: action.data,\n            };\n        }\n\n        case SET_PERSON_ORDER_INFO: {\n            return {\n                ...state,\n                personOrdersActive: action.data,\n            };\n        }\n        //иное\n        default: {\n            return state;\n        }\n    }\n};\n","import { TListOfOrders } from '../../../utils/types/types';\nimport { checkResponse } from '../../../utils/functions/checkResponse';\n\nexport const WS_CONNECTION_START: 'WS_CONNECTION_START' = 'WS_CONNECTION_START';\nexport const WS_CONNECTION_SUCCESS: 'WS_CONNECTION_SUCCESS' =\n    'WS_CONNECTION_SUCCESS';\nexport const WS_CONNECTION_ERROR: 'WS_CONNECTION_ERROR' = 'WS_CONNECTION_ERROR';\nexport const WS_CONNECTION_CLOSED: 'WS_CONNECTION_CLOSED' =\n    'WS_CONNECTION_CLOSED';\n// export const WS_CONNECTION_END: 'WS_CONNECTION_END' = 'WS_CONNECTION_END';\nexport const WS_CONNECTION_GET_MESSAGE: 'WS_CONNECTION_GET_MESSAGE' =\n    'WS_CONNECTION_GET_MESSAGE';\nexport const WS_CONNECTION_SEND_MESSAGE: 'WS_CONNECTION_SEND_MESSAGE' =\n    'WS_CONNECTION_SEND_MESSAGE';\n\nexport interface IWSConnectionStart {\n    readonly type: typeof WS_CONNECTION_START;\n    readonly wsUrl: string;\n}\nexport interface IWSConnectionSuccess {\n    readonly type: typeof WS_CONNECTION_SUCCESS;\n    readonly payload: Event;\n}\nexport interface IWSConnectionError {\n    readonly type: typeof WS_CONNECTION_ERROR;\n    readonly payload: ErrorEvent;\n}\nexport interface IWSConnectionClosed {\n    readonly type: typeof WS_CONNECTION_CLOSED;\n}\nexport interface IWSConnectionGetMessage {\n    readonly type: typeof WS_CONNECTION_GET_MESSAGE;\n    readonly payload: TListOfOrders;\n}\nexport interface IWSConnectionSendMessage {\n    readonly type: typeof WS_CONNECTION_SEND_MESSAGE;\n    readonly payload: any; //<---тут может быть всё, что угодно\n}\n\nexport type TWSConnectionActions =\n    | IWSConnectionSendMessage\n    | IWSConnectionGetMessage\n    | IWSConnectionClosed\n    | IWSConnectionError\n    | IWSConnectionSuccess\n    | IWSConnectionStart;\n\nexport const wsConnectionStart = (wsUrl: string): IWSConnectionStart => {\n    return {\n        type: WS_CONNECTION_START,\n        wsUrl: wsUrl,\n    };\n};\n\nexport const wsConnectionSuccess = (payload: Event): IWSConnectionSuccess => {\n    // console.log(payload);\n    return {\n        type: WS_CONNECTION_SUCCESS,\n        payload: payload,\n    };\n};\n\nexport const wsConnectionError = (payload: ErrorEvent): IWSConnectionError => {\n    return {\n        type: WS_CONNECTION_ERROR,\n        payload: payload,\n    };\n};\n\nexport const wsConnectionClosed = (): IWSConnectionClosed => {\n    return {\n        type: WS_CONNECTION_CLOSED,\n    };\n};\n\nexport const wsConnectionGetMessage = (\n    message: TListOfOrders\n): IWSConnectionGetMessage => {\n    return {\n        type: WS_CONNECTION_GET_MESSAGE,\n        payload: message,\n    };\n};\n\nexport const wsConnectionSendMessage = (\n    message: any //<-----тут может быть что угодно\n): IWSConnectionSendMessage => {\n    return {\n        type: WS_CONNECTION_SEND_MESSAGE,\n        payload: message,\n    };\n};\n","import { TSocketActions } from '../../../utils/types/actionSocketTypes';\nimport {\n    WS_CONNECTION_CLOSED,\n    WS_CONNECTION_ERROR,\n    WS_CONNECTION_GET_MESSAGE,\n    WS_CONNECTION_SEND_MESSAGE,\n    WS_CONNECTION_START,\n    WS_CONNECTION_SUCCESS,\n} from '../../actions/socketAction/socketActions';\nimport { TListOfOrders } from '../../../utils/types/types';\n\nexport type TSocketReducer = {\n    data: Event | undefined;\n    WSUrl: string;\n    payload: TListOfOrders | undefined;\n};\nconst initialState: TSocketReducer = {\n    data: undefined,\n    WSUrl: 'wss://norma.nomoreparties.space/orders',\n    payload: undefined,\n};\nexport const socketReducer = (\n    state: TSocketReducer = initialState,\n    action: TSocketActions\n): TSocketReducer => {\n    switch (action.type) {\n        case WS_CONNECTION_CLOSED: {\n            return {\n                ...state,\n                data: action.payload,\n            };\n        }\n        case WS_CONNECTION_START: {\n            return {\n                ...state,\n            };\n        }\n        case WS_CONNECTION_ERROR: {\n            return {\n                ...state,\n                data: action.payload,\n            };\n        }\n        case WS_CONNECTION_SEND_MESSAGE: {\n            return {\n                ...state,\n            };\n        }\n        case WS_CONNECTION_SUCCESS: {\n            return {\n                ...state,\n                data: action.payload,\n            };\n        }\n        case WS_CONNECTION_GET_MESSAGE: {\n            return {\n                ...state,\n                payload: action.payload,\n            };\n        }\n\n        default: {\n            return state;\n        }\n    }\n};\n","import {\n    SET_STATE,\n    ADD_COMPONENT,\n    ADD_BUN,\n    CHANGE_BUN,\n    SET_ACTIVE,\n    SET_DATA,\n    CLEAR_INFO,\n    DRAG_ELEMENT,\n    CHANGE_COMPONENTS,\n    SET_ON_DRAG,\n    SWAP_COMPONENTS,\n    SET_ORDER_INFO,\n    GET_INGREDIENTS_URL_REQUEST,\n    GET_INGREDIENTS_URL_SUCCESS,\n    GET_INGREDIENTS_URL_ERROR,\n    SET_ORDER_ACTIVE,\n} from '../../actions/componentAction/components';\n\nimport { combineReducers } from 'redux';\nimport { orderReducer } from '../ordersReducer/orders';\nimport { requestsReducer } from '../requestsReducer/requestsReducer';\nimport { TCard } from '../../../utils/types/types';\nimport { TComponentsActions } from '../../../utils/types/actionComponentsTypes';\nimport { socketReducer } from '../socketReducer/socketReducer';\n\nexport type TinitialState = {\n    ingredients: TCard[];\n    totalPrice: number;\n    order: {\n        buns: any; //<---- тут должна быть булка\n        components: TCard[];\n    };\n    isActiv: boolean;\n    isOrderActiv: boolean;\n    cardData: TCard | null;\n    orderInfo: any; //<-тут может быть что угодно\n    draggedElement: TCard | null;\n    underDraggedElement: TCard | null;\n    cart: string;\n    isReady: boolean;\n    isIngredientSend: boolean;\n    isIngredientSuccess: boolean;\n    isIngredientError: boolean;\n};\n\nconst initialState: TinitialState = {\n    //список всех ингредиентов\n    ingredients: [],\n\n    //итоговая цена заказа\n    totalPrice: 0,\n\n    //заказ\n    order: {\n        buns: null,\n        components: [],\n    },\n\n    //состояние модального окна\n    isActiv: false,\n\n    //состояние модального окна заказа\n    isOrderActiv: false,\n\n    //данные карточки ингредиента\n    cardData: null,\n\n    //хранение информации заказа\n    orderInfo: null,\n\n    //перетаскиваемый объект\n    draggedElement: null,\n\n    //объект, над которым держат\n    underDraggedElement: null,\n\n    //корзина, из которой перетаскивают\n    cart: '',\n\n    //готовность записи поднятого элемента\n    isReady: true,\n\n    //отправка запроса\n    isIngredientSend: false,\n\n    //успех запроса\n    isIngredientSuccess: false,\n\n    //ошибка в запросе\n    isIngredientError: false,\n};\n\nexport const componentReducer = (\n    state: TinitialState = initialState,\n    action: TComponentsActions\n): TinitialState => {\n    switch (action.type) {\n        //получение данных\n        case SET_STATE: {\n            return { ...state, ingredients: action.data };\n        }\n\n        //добавление небулки\n        case ADD_COMPONENT: {\n            return {\n                ...state,\n\n                order: {\n                    components: [...state.order.components, action.data],\n                    buns: state.order.buns,\n                },\n                totalPrice: state.totalPrice + action.data.price,\n            };\n        }\n\n        //добавление булки\n        case ADD_BUN: {\n            return {\n                ...state,\n                order: {\n                    components: [...state.order.components],\n                    buns: action.data,\n                },\n                totalPrice: state.totalPrice + 2 * action.data.price,\n            };\n        }\n\n        //замена булки\n        case CHANGE_BUN: {\n            return {\n                ...state,\n                order: {\n                    components: [...state.order.components],\n                    buns: action.data,\n                },\n                totalPrice:\n                    state.totalPrice +\n                    2 * action.data.price -\n                    2 * state.order.buns.price,\n            };\n        }\n\n        //изменение статуса активности\n        case SET_ACTIVE: {\n            return {\n                ...state,\n                isActiv: action.value,\n            };\n        }\n\n        //изменение статуса активности\n        case SET_ORDER_ACTIVE: {\n            return {\n                ...state,\n                isOrderActiv: action.data,\n            };\n        }\n\n        //запись данных карточки\n        case SET_DATA: {\n            return {\n                ...state,\n                cardData: action.data,\n            };\n        }\n\n        //очистка информации заказа для нового\n        case CLEAR_INFO: {\n            return {\n                ...state,\n                order: {\n                    buns: null,\n                    components: [],\n                },\n                ingredients: action.data,\n                totalPrice: 0,\n                orderInfo: null,\n            };\n        }\n\n        // //функция смены компонентов местами\n        // case CHANGE_SWAP: {\n        //     return {\n        //         ...state,\n        //         isSwap: action.isSwap,\n        //     };\n        // }\n\n        case SET_ORDER_INFO: {\n            return {\n                ...state,\n                orderInfo: action.data,\n            };\n        }\n\n        //запись переносимого элемента\n        case DRAG_ELEMENT: {\n            return {\n                ...state,\n                draggedElement: action.data,\n                cart: action.cartData,\n                isReady: action.isReady,\n            };\n        }\n\n        //функция смены компонентов местами\n        case SWAP_COMPONENTS: {\n            return {\n                ...state,\n                order: {\n                    buns: state.order.buns,\n                    components: action.data,\n                },\n                isReady: action.isReady,\n            };\n        }\n\n        //удаление элементов\n        case CHANGE_COMPONENTS: {\n            return {\n                ...state,\n                order: {\n                    buns: state.order.buns,\n                    components: [\n                        ...state.order.components.slice(0, action.index),\n                        ...state.order.components.slice(\n                            action.index + 1,\n                            action.length\n                        ),\n                    ],\n                },\n                totalPrice: state.totalPrice - action.element.price,\n                underDraggedElement: null,\n            };\n        }\n\n        //запись переносимого элемента\n        case SET_ON_DRAG: {\n            return {\n                ...state,\n                underDraggedElement: action.data,\n            };\n        }\n\n        case GET_INGREDIENTS_URL_REQUEST: {\n            return {\n                ...state,\n                isIngredientError: false,\n                isIngredientSuccess: false,\n                isIngredientSend: true,\n            };\n        }\n\n        case GET_INGREDIENTS_URL_SUCCESS: {\n            return {\n                ...state,\n                ingredients: action.data,\n                isIngredientSend: false,\n                isIngredientError: false,\n                isIngredientSuccess: true,\n            };\n        }\n\n        case GET_INGREDIENTS_URL_ERROR: {\n            return {\n                ...state,\n                isIngredientSend: false,\n                isIngredientError: true,\n                isIngredientSuccess: false,\n            };\n        }\n        //иное\n        default: {\n            return state;\n        }\n    }\n};\n\nexport const rootReducer = combineReducers({\n    component: componentReducer,\n    orderData: orderReducer,\n    requests: requestsReducer,\n    sockets: socketReducer,\n});\n","import {\n    Action,\n    ActionCreator,\n    applyMiddleware,\n    compose,\n    createStore,\n} from 'redux';\nimport { rootReducer } from '../../Services/reducers/componentsReducer/components';\n\nimport { TComponentsActions } from './actionComponentsTypes';\nimport { TRequestActions } from './actionRequestsTypes';\nimport thunk, { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport {\n    TypedUseSelectorHook,\n    useSelector as selectorHook,\n    useDispatch as dispatchHook,\n} from 'react-redux';\nimport { TSocketActions } from './actionSocketTypes';\nimport { socketMiddleware } from '../../Services/middleware/socketMiddleware';\nimport {\n    WS_CONNECTION_CLOSED,\n    WS_CONNECTION_ERROR,\n    WS_CONNECTION_GET_MESSAGE,\n    WS_CONNECTION_SEND_MESSAGE,\n    WS_CONNECTION_START,\n    WS_CONNECTION_SUCCESS,\n} from '../../Services/actions/socketAction/socketActions';\n\nconst wsUrl = 'wss://norma.nomoreparties.space/orders';\n\nexport const wsActions = {\n    wsInit: WS_CONNECTION_START,\n    wsSendMessage: WS_CONNECTION_SEND_MESSAGE,\n    onOpen: WS_CONNECTION_SUCCESS,\n    onClose: WS_CONNECTION_CLOSED,\n    onError: WS_CONNECTION_ERROR,\n    onMessage: WS_CONNECTION_GET_MESSAGE,\n};\n\nexport const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const enhancer = composeEnhancers(\n    applyMiddleware(thunk, socketMiddleware(wsUrl, wsActions))\n);\n\nexport const store = createStore(rootReducer, enhancer);\n\n// получение состояний хранилища\nexport type RootState = ReturnType<typeof store.getState>;\n// единый тип для экшенов\nexport type TApplicationActions =\n    | TComponentsActions\n    | TRequestActions\n    | TSocketActions;\n\n// типизация thunk\nexport type AppThunk<TReturn = void> = ActionCreator<\n    ThunkAction<TReturn, Action, RootState, TApplicationActions>\n>;\n\n// типизация хранилища и thunk\nexport type AppDispatch = ThunkDispatch<RootState, never, TApplicationActions>;\n\n// типизация useSelector\nexport const useSelector: TypedUseSelectorHook<RootState> = selectorHook;\n\n// типизация useDispatch\nexport const useDispatch = () => dispatchHook<AppDispatch | AppThunk>();\n","import { Middleware, MiddlewareAPI } from 'redux';\nimport { AppDispatch, RootState } from '../../utils/types/store';\n\nexport const socketMiddleware = (wsUrl: string, wsActions: any): Middleware => {\n    return (store: MiddlewareAPI<AppDispatch, RootState>) => {\n        let socket: null | WebSocket = null;\n\n        return (next) => (action) => {\n            const { dispatch, getState } = store;\n            const { type, payload } = action;\n            const { wsInit, onOpen, onClose, onError, onMessage } = wsActions;\n            // const { token } = getState().token;\n            // console.log(payload);\n            if (type === wsInit) {\n                // console.log(payload);\n                socket = new WebSocket(wsUrl + payload);\n            }\n\n            if (socket) {\n                socket.onopen = (event: Event) => {\n                    // console.log('onSuccess');\n                    dispatch({ type: onOpen, payload: event });\n                };\n\n                socket.onerror = (event: Event) => {\n                    dispatch({ type: onError, payload: event });\n                };\n\n                socket.onmessage = (event: MessageEvent) => {\n                    // console.log('hello again!');\n                    // console.log(event.data);\n                    const parsedData = JSON.parse(event.data);\n                    // console.log('onMessage');\n                    // console.log(parsedData);\n                    dispatch({\n                        type: onMessage,\n                        payload: parsedData,\n                    });\n                    // wsConnectionGetMessage(restParsedData);\n                };\n\n                socket.onclose = () => {\n                    // console.log('close');\n                    dispatch({\n                        type: onClose,\n                    });\n                };\n\n                // if (type === wsSendMessage) {\n                //     const message = { ...payload, token: user.token };\n                //     socket.send(JSON.stringify(message));\n                // }\n            }\n\n            next(action);\n        };\n    };\n};\n","import React, { FC, useEffect, useState } from 'react';\nimport HeaderStyles from './header.module.css';\nimport {\n    BurgerIcon,\n    ListIcon,\n    Logo,\n    ProfileIcon,\n} from '@ya.praktikum/react-developer-burger-ui-components';\nimport { useHistory, useLocation, useRouteMatch } from 'react-router-dom';\nimport { setOrderInfo } from '../../Services/actions/requestAction/requestsActions';\nimport { useDispatch } from '../../utils/types/store';\n\nconst Header: FC = () => {\n    const location = useLocation();\n    const history = useHistory();\n    const [type, setType] = useState<string>('home');\n    const dispatch = useDispatch();\n    const { url } = useRouteMatch();\n    useEffect(() => {\n        if (location.pathname === '/') {\n            setType('home');\n        } else if (location.pathname.split('/')[1] === 'profile') {\n            setType('profile');\n        } else {\n            setType('beSoon');\n        }\n    }, [location]);\n    // console.log(type);\n    return (\n        <div className={HeaderStyles.top}>\n            <header className={HeaderStyles.header}>\n                {/*зона левых кнопок*/}\n                <div className={HeaderStyles.btnArea}>\n                    <div\n                        className={HeaderStyles.constructorR}\n                        onClick={(): void => {\n                            history.replace({ pathname: '/' });\n                        }}>\n                        <BurgerIcon\n                            type={type === 'home' ? 'primary' : 'secondary'}\n                        />\n                        <p\n                            className={\n                                type === 'home'\n                                    ? HeaderStyles.headerText +\n                                      'text text_type_main-default text_color_active ' +\n                                      HeaderStyles.hoverText\n                                    : HeaderStyles.headerText +\n                                      'text text_type_main-default text_color_inactive ' +\n                                      HeaderStyles.hoverText\n                            }>\n                            Конструктор\n                        </p>\n                    </div>\n                    <div\n                        className={HeaderStyles.orderList}\n                        onClick={() => {\n                            history.replace({ pathname: '/feed' });\n\n                            dispatch(setOrderInfo(undefined));\n                        }}>\n                        <ListIcon\n                            type={type === 'beSoon' ? 'primary' : 'secondary'}\n                        />\n                        <p\n                            className={\n                                type === 'beSoon'\n                                    ? HeaderStyles.headerText +\n                                      'text text_type_main-default text_color_active ' +\n                                      HeaderStyles.hoverText\n                                    : HeaderStyles.headerText +\n                                      'text text_type_main-default text_color_inactive ' +\n                                      HeaderStyles.hoverText\n                            }>\n                            Лента заказов\n                        </p>\n                    </div>\n                </div>\n\n                {/*лого*/}\n                <div\n                    className={HeaderStyles.logoDiv}\n                    onClick={(): void => {\n                        history.replace({ pathname: '/' });\n                    }}>\n                    <div className={HeaderStyles.logo}>\n                        {' '}\n                        <Logo />\n                    </div>\n                </div>\n                {/*зона правых кнопок*/}\n                <div\n                    className={HeaderStyles.personalAccount}\n                    onClick={(): void =>\n                        history.replace({ pathname: '/profile' })\n                    }>\n                    <ProfileIcon\n                        type={type === 'profile' ? 'primary' : 'secondary'}\n                    />\n                    <p\n                        className={\n                            type === 'profile'\n                                ? 'text headerText text_type_main-small text_color_active ' +\n                                  HeaderStyles.hoverText\n                                : 'text headerText text_type_main-small text_color_inactive ' +\n                                  HeaderStyles.hoverText\n                        }>\n                        Личный кабинет\n                    </p>\n                </div>\n            </header>\n        </div>\n    );\n};\n\n//propTypes - нету\n\nexport default Header;\n","import React, { FC, useEffect, useState } from 'react';\nimport loginStyles from './login.module.css';\nimport '../../commonStyles/styles.css';\nimport {\n    Button,\n    Input,\n    PasswordInput,\n} from '@ya.praktikum/react-developer-burger-ui-components';\nimport { Redirect, useHistory, useLocation } from 'react-router-dom';\nimport {\n    clearForgotCookie,\n    enterRequest,\n    // getCookie,\n} from '../../Services/actions/requestAction/requestsActions';\nimport { useDispatch, useSelector } from '../../utils/types/store';\n\ntype TLocation = {\n    from: { pathname: string };\n};\n\nconst Login: FC = () => {\n    // console.log(typeof location.state.from.pathname);\n    const [password, setPassword] = useState<string>('');\n    const [email, setEmail] = useState<string>('');\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const { baseURL, isLogin } = useSelector((store) => ({\n        baseURL: store.requests.baseURL,\n        isLogin: store.requests.isLogin,\n    }));\n    const { state } = useLocation<TLocation>();\n\n    useEffect((): void => {\n        dispatch(clearForgotCookie());\n    }, []);\n\n    // console.log(isAuth(), ' ', getCookie('accessToken'));\n    if (isLogin) {\n        return <Redirect to={{ pathname: state?.from.pathname || '/' }} />;\n    }\n\n    return (\n        <div className={loginStyles.mainContainer}>\n            <div className={loginStyles.formContainer}>\n                <h1\n                    className={\n                        loginStyles.headerText + 'text text_type_main-medium'\n                    }>\n                    Войти\n                </h1>\n\n                <form\n                    className={loginStyles.inputContainer}\n                    onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n                        e.preventDefault();\n                        dispatch(enterRequest(email, password, baseURL));\n                    }}>\n                    <label>\n                        <Input\n                            type={'text'}\n                            placeholder={'Email'}\n                            onChange={(\n                                e: React.ChangeEvent<HTMLInputElement>\n                            ): void => setEmail(e.target.value)}\n                            value={email}\n                            name={'name'}\n                            error={false}\n                            errorText={'Ошибка'}\n                            size={'default'}\n                        />\n                    </label>\n                    <label>\n                        <div className=\"input\">\n                            <PasswordInput\n                                onChange={(\n                                    e: React.ChangeEvent<HTMLInputElement>\n                                ): void => setPassword(e.target.value)}\n                                value={password}\n                                name={'password'}\n                            />\n                        </div>\n                    </label>\n\n                    <div className={loginStyles.buttonContainer}>\n                        <Button type=\"primary\" size=\"small\">\n                            <p className=\"text text_type_main-default \">\n                                Войти\n                            </p>\n                        </Button>\n                    </div>\n                </form>\n\n                <p className=\"text text_type_main-default text_color_inactive\">\n                    Вы новый пользователь?\n                    <span\n                        className=\"text text_type_main-default text_color_inactive\"\n                        onClick={(): void =>\n                            history.push({\n                                pathname: '/register',\n                                state: { url: state?.from.pathname },\n                            })\n                        }>\n                        {' '}\n                        Зарегистрироваться\n                    </span>\n                </p>\n\n                <p className=\"text text_type_main-default text_color_inactive\">\n                    Забыли пароль?{' '}\n                    <span\n                        className=\"text text_type_main-default text_color_inactive\"\n                        onClick={(): void =>\n                            history.replace({ pathname: '/forgot-password' })\n                        }>\n                        {' '}\n                        Восстановить пароль\n                    </span>\n                </p>\n            </div>\n        </div>\n    );\n};\n\n//propTypes - нету\nexport default Login;\n","import React, { ChangeEvent, FC, FormEvent, useEffect, useState } from 'react';\nimport { Redirect, useHistory, useLocation } from 'react-router-dom';\nimport registerStyle from './register.module.css';\nimport '../../commonStyles/styles.css';\nimport {\n    Button,\n    Input,\n    PasswordInput,\n} from '@ya.praktikum/react-developer-burger-ui-components';\nimport { registerRequest } from '../../Services/actions/requestAction/requestsActions';\nimport { Location } from 'history';\nimport { useDispatch, useSelector } from '../../utils/types/store';\n\ntype TLocation = {\n    url: string;\n    location: Location;\n};\n\nconst Registration: FC = () => {\n    const [name, setName] = useState<string>('');\n    const [email, setEmail] = useState<string>('');\n    const [password, setPassword] = useState<string>('');\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const location = useLocation<TLocation>();\n    let fromURL: string = '';\n    useEffect(() => {\n        if (location.state) {\n            fromURL = location.state.url;\n        }\n    }, [location]);\n\n    const { baseURL, isLogin } = useSelector((store) => ({\n        baseURL: store.requests.baseURL,\n        isLogin: store.requests.isLogin,\n    }));\n\n    // console.log(isAuth(), ' ', getCookie('accessToken'));\n\n    if (isLogin) {\n        return <Redirect to={{ pathname: fromURL }} />;\n    }\n\n    return (\n        <div className={registerStyle.mainContainer}>\n            <div className={registerStyle.formContainer}>\n                <h1\n                    className={\n                        registerStyle.headerText + 'text text_type_main-medium'\n                    }>\n                    Регистрация\n                </h1>\n                <form\n                    className={registerStyle.inputContainer}\n                    onSubmit={(e: FormEvent<HTMLFormElement>): void => {\n                        e.preventDefault();\n                        dispatch(\n                            registerRequest(email, password, name, baseURL)\n                        );\n                    }}>\n                    <label>\n                        <div className=\"input\">\n                            <Input\n                                type={'text'}\n                                placeholder={'Имя'}\n                                onChange={(\n                                    e: ChangeEvent<HTMLInputElement>\n                                ): void => setName(e.target.value)}\n                                value={name}\n                                name={'name'}\n                                error={false}\n                                errorText={'Ошибка'}\n                                size={'default'}\n                            />\n                        </div>\n                    </label>\n                    <label>\n                        <div className=\"input\">\n                            <Input\n                                type={'text'}\n                                placeholder={'E-mail'}\n                                onChange={(\n                                    e: ChangeEvent<HTMLInputElement>\n                                ): void => setEmail(e.target.value)}\n                                value={email}\n                                name={'name'}\n                                error={false}\n                                errorText={'Ошибка'}\n                                size={'default'}\n                            />\n                        </div>\n                    </label>\n                    <label>\n                        <PasswordInput\n                            onChange={(\n                                e: ChangeEvent<HTMLInputElement>\n                            ): void => setPassword(e.target.value)}\n                            value={password}\n                            name={'password'}\n                        />\n                    </label>\n                    <div className={registerStyle.buttonContainer}>\n                        <Button type=\"primary\" size=\"small\">\n                            <p className=\"text text_type_main-default \">\n                                Зарегистироваться\n                            </p>\n                        </Button>\n                    </div>\n                </form>\n\n                <p className=\"text text_type_main-default text_color_inactive\">\n                    Уже зарегистрированы?\n                    <span\n                        className=\"text text_type_main-default text_color_inactive\"\n                        onClick={(): void =>\n                            history.replace({ pathname: '/login' })\n                        }>\n                        {' '}\n                        Войти\n                    </span>\n                </p>\n            </div>\n        </div>\n    );\n};\n\n//propTypes - нету\nexport default Registration;\n","import React, { ChangeEvent, FC, useEffect, useState } from 'react';\nimport forgotStyles from './forgot.module.css';\nimport {\n    Button,\n    Input,\n} from '@ya.praktikum/react-developer-burger-ui-components';\nimport '../../commonStyles/styles.css';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport { forgotRequest } from '../../Services/actions/requestAction/requestsActions';\nimport { useDispatch, useSelector } from '../../utils/types/store';\n\nconst ForgotPassword: FC = () => {\n    const [forgot, setForgot] = useState<string>('');\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const { baseURL, forgotRequestSuccess, forgotRequestError, isLogin } =\n        useSelector((store) => ({\n            baseURL: store.requests.baseURL,\n            forgotRequestSuccess: store.requests.forgotRequestSuccess,\n            forgotRequestError: store.requests.forgotRequestError,\n            isLogin: store.requests.isLogin,\n        }));\n\n    useEffect((): void => {\n        forgotRequestSuccess &&\n            !forgotRequestError &&\n            history.replace({ pathname: '/reset-password' });\n    }, [forgotRequestSuccess, forgotRequestError]);\n\n    // console.log(isAuth(), ' ', getCookie('accessToken'));\n    if (isLogin) {\n        return (\n            <Redirect\n                to={{\n                    pathname: '/',\n                }}\n            />\n        );\n    }\n\n    return (\n        <div className={forgotStyles.commonContainer}>\n            <form\n                className={forgotStyles.formContainer}\n                onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n                    e.preventDefault();\n                    dispatch(forgotRequest(baseURL, forgot));\n                }}>\n                <h1 className=\"text text_type_main-medium\">\n                    Восстановление пароля\n                </h1>\n                <label>\n                    <div className=\"input\">\n                        <Input\n                            type={'text'}\n                            placeholder={'Email'}\n                            onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                                setForgot(e.target.value)\n                            }\n                            value={forgot}\n                            name={'name'}\n                            error={false}\n                            errorText={'Ошибка'}\n                            size={'default'}\n                        />\n                    </div>\n                </label>\n                <div className={forgotStyles.buttonContainer}>\n                    <Button type=\"primary\" size=\"medium\">\n                        Восстановить\n                    </Button>\n                </div>\n                <p className=\"text text_type_main-default text_color_inactive\">\n                    Вспомнили пароль?{' '}\n                    <span\n                        className=\"text text_type_main-default text_color_inactive\"\n                        onClick={(): void =>\n                            history.replace({ pathname: '/login' })\n                        }>\n                        {' '}\n                        Войти\n                    </span>\n                </p>\n            </form>\n        </div>\n    );\n};\n\n//propTypes - нету\nexport default ForgotPassword;\n","import React, { FC, useEffect, useState } from 'react';\nimport resetStyles from './reset.module.css';\nimport {\n    Button,\n    Input,\n    PasswordInput,\n} from '@ya.praktikum/react-developer-burger-ui-components';\nimport '../../commonStyles/styles.css';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport { resetRequest } from '../../Services/actions/requestAction/requestsActions';\nimport { isForgot } from '../../utils/functions/isForgot';\nimport { useDispatch, useSelector } from '../../utils/types/store';\n\nconst ResetPassword: FC = () => {\n    const [password, setPassword] = useState<string>('');\n    const [token, setToken] = useState<string>('');\n    const { baseURL, resetRequestSuccess, resetRequestError, isLogin } =\n        useSelector((store) => ({\n            baseURL: store.requests.baseURL,\n            resetRequestSuccess: store.requests.resetRequestSuccess,\n            resetRequestError: store.requests.resetRequestError,\n            isLogin: store.requests.isLogin,\n        }));\n\n    useEffect((): void => {\n        resetRequestSuccess &&\n            !resetRequestError &&\n            history.replace({ pathname: '/login' });\n    }, [resetRequestSuccess, resetRequestError]);\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    if (isLogin) {\n        return (\n            <Redirect\n                to={{\n                    pathname: '/',\n                }}\n            />\n        );\n    }\n    if (!isLogin && isForgot()) {\n        return (\n            <Redirect\n                to={{\n                    pathname: '/forgot-password',\n                }}\n            />\n        );\n    }\n\n    // console.log(isAuth(), ' ', isForgot());\n    // console.log(\n    //     isForgot(),\n    //     ' ',\n    //     getCookie('accessToken'),\n    //     ' ',\n    //     getCookie('forgot')\n    // );\n\n    return (\n        <div className={resetStyles.commonContainer}>\n            <form\n                className={resetStyles.formContainer}\n                onSubmit={(e): void => {\n                    e.preventDefault();\n                    dispatch(resetRequest(password, token, baseURL));\n                }}>\n                <h1 className=\"text text_type_main-medium\">\n                    Восстановление пароля\n                </h1>\n                <label>\n                    <div className=\"input\">\n                        <PasswordInput\n                            onChange={(e): void => setPassword(e.target.value)}\n                            value={password}\n                            name={'password'}\n                        />\n                    </div>\n                </label>\n                <label>\n                    <div className=\"input\">\n                        <Input\n                            type={'text'}\n                            placeholder={'Введите код из письма'}\n                            onChange={(e): void => setToken(e.target.value)}\n                            value={token}\n                            name={'name'}\n                            error={false}\n                            errorText={'Ошибка'}\n                            size={'default'}\n                        />\n                    </div>\n                </label>\n                <div className={resetStyles.buttonContainer}>\n                    <Button type=\"primary\" size=\"medium\">\n                        Сохранить\n                    </Button>\n                </div>\n                <p className=\"text text_type_main-default text_color_inactive\">\n                    Вспомнили пароль?{' '}\n                    <span\n                        className=\"text text_type_main-default text_color_inactive\"\n                        onClick={() => history.replace({ pathname: '/login' })}>\n                        {' '}\n                        Войти\n                    </span>\n                </p>\n            </form>\n        </div>\n    );\n};\n\n//propTypes - нету\nexport default ResetPassword;\n","import { getCookie } from './cookieFunctions/getCookie';\n\nexport function isForgot(): boolean {\n    return getCookie('forgot') === undefined;\n}\n","import React, { FC } from 'react';\nimport profileHStyles from './profile-header.module.css';\nimport { logoutRequest } from '../../../Services/actions/requestAction/requestsActions';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nimport { useDispatch, useSelector } from '../../../utils/types/store';\n\nconst ProfileHeader: FC = () => {\n    // console.log('profileHeader');\n    const { url } = useRouteMatch<string | undefined>();\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const { baseURL } = useSelector((store) => ({\n        baseURL: store.requests.baseURL,\n    }));\n\n    return (\n        <div className={profileHStyles.headContainer}>\n            <div className={profileHStyles.pText}>\n                {/*/profile*/}\n                <p\n                    className={\n                        url.split('/')[2] === undefined\n                            ? 'text text_type_main-medium text_color_active'\n                            : 'text text_type_main-medium text_color_inactive'\n                    }\n                    onClick={(): void => {\n                        history.replace({ pathname: '/profile' });\n                    }}>\n                    Профиль\n                </p>\n            </div>\n            <div className={profileHStyles.pText}>\n                {/*/profile orders*/}\n                <p\n                    className={\n                        url.split('/')[2] === 'orders'\n                            ? 'text text_type_main-medium text_color_active'\n                            : 'text text_type_main-medium text_color_inactive'\n                    }\n                    onClick={(): void => {\n                        url.split('/')[2] !== 'orders' &&\n                            history.replace({ pathname: url + '/orders' });\n                    }}>\n                    История заказов\n                </p>\n            </div>\n            <div className={profileHStyles.pText}>\n                {/*/logout*/}\n                <p\n                    className=\"text text_type_main-medium text_color_inactive\"\n                    onClick={(): void => {\n                        dispatch(logoutRequest(baseURL));\n                    }}>\n                    Выход\n                </p>\n            </div>\n            <div className={profileHStyles.descText}>\n                <p className=\"text text_type_main-default text_color_inactive\">\n                    В этом разделе вы можете изменить свои персональные данные\n                </p>\n            </div>\n        </div>\n    );\n};\n//propTypes - нету\n\nexport default ProfileHeader;\n","import React, { FC } from 'react';\nimport profileMStyles from './profile-main.module.css';\nimport {\n    Button,\n    EmailInput,\n} from '@ya.praktikum/react-developer-burger-ui-components';\nimport {\n    profileRequest,\n    setLogoutData,\n    updateRequest,\n} from '../../../Services/actions/requestAction/requestsActions';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { getCookie } from '../../../utils/functions/cookieFunctions/getCookie';\nimport {\n    RootState,\n    useDispatch,\n    useSelector,\n} from '../../../utils/types/store';\n\nconst ProfileMain: FC = () => {\n    const [email, setEmail] = useState<string>('');\n    const [name, setName] = useState<string>('');\n    const [password, setPassword] = useState<string>('');\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const {\n        baseURL,\n        nameV,\n        emailV,\n        profileRequestError,\n        logoutRequestSuccess,\n        isLogout,\n        isLogin,\n    } = useSelector((store) => ({\n        baseURL: store.requests.baseURL,\n        nameV: store.requests.name,\n        emailV: store.requests.email,\n        profileRequestError: store.requests.profileRequestError,\n        logoutRequestSuccess: store.requests.logoutRequestSuccess,\n        isLogout: store.requests.isLogout,\n        isLogin: store.requests.isLogin,\n    }));\n\n    //useEffect - проверка на авторизованность и выход из профиля\n    useEffect(() => {\n        // console.log(getCookie('accessToken') + ' ' + isLogout);\n        if (!isLogin) {\n            dispatch(setLogoutData());\n            history.replace({ pathname: '/login' });\n        } else {\n            if (!isLogout) {\n                dispatch(profileRequest(baseURL));\n                if (profileRequestError) {\n                    dispatch(profileRequest(baseURL));\n                }\n                setEmail(emailV);\n                setName(nameV);\n                let myPass: string | undefined = getCookie('password');\n                if (myPass !== undefined) {\n                    setPassword(myPass);\n                }\n            }\n        }\n    }, [nameV, emailV, logoutRequestSuccess]);\n\n    return (\n        <form\n            className={profileMStyles.formContainer}\n            onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n                e.preventDefault();\n                dispatch(updateRequest(baseURL, name, email, password));\n            }}>\n            <label>\n                <div className=\"input\">\n                    <EmailInput\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                            setName(e.target.value)\n                        }\n                        value={name}\n                        name={'name'}\n                    />\n                </div>\n            </label>\n            <label>\n                <div className=\"input\">\n                    <EmailInput\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                            setEmail(e.target.value)\n                        }\n                        value={email}\n                        name={'email'}\n                        // TS2339: Property 'value' does not exist on type 'EventTarget & HTMLElement'.\n                    />\n                </div>\n            </label>\n            <label>\n                <div className=\"input\">\n                    <EmailInput\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                            setPassword(e.target.value)\n                        }\n                        value={password}\n                        name={'password'}\n                    />\n                </div>\n            </label>\n            <div className={profileMStyles.tabsContainer}>\n                <p\n                    className=\"text text_type_main-default text_color_inactive\"\n                    onClick={(): void => {\n                        setEmail(emailV);\n                        setName(nameV);\n                        let myPass: string | undefined = getCookie('password');\n                        if (myPass !== undefined) {\n                            setPassword(myPass);\n                        }\n                    }}>\n                    Отмена\n                </p>\n                <Button type=\"primary\" size=\"medium\">\n                    Сохранить\n                </Button>\n            </div>\n        </form>\n    );\n};\n\n//propTypes - нету\n\nexport default ProfileMain;\n","export function getDate(date: string): string {\n    let time: Date | string = new Date(Date.parse(date));\n    time = time.toString();\n    let array: string[] = time.split(' ');\n    let str: string =\n        array[2] + ' ' + array[1] + ' ' + array[3] + ' ' + array[4];\n    return str;\n}\n","import { TCard } from '../types/types';\n\nexport const getInfo = (id: string, ingredients: TCard[]): number => {\n    let index: number = -1;\n    for (let i = 0; i < ingredients.length; i++) {\n        if (ingredients[i]['_id'] === id) {\n            index = i;\n        }\n    }\n    console.log(index);\n    return index;\n};\n","import { TCard } from '../types/types';\n\nexport const getOrderPrice = (\n    element: string[],\n    ingredients: TCard[]\n): number => {\n    let price: number = 0;\n    // console.log(element);\n    // console.log(1 + ' ' + element);\n    for (let j = 0; j < element.length; j++) {\n        for (let i = 0; i < ingredients.length; i++) {\n            if (element[j] === ingredients[i]['_id']) {\n                price += ingredients[i].price;\n                break;\n            }\n        }\n    }\n\n    return price;\n};\n","import React, { FC, useEffect } from 'react';\nimport profileStyles from './profile-orders.module.css';\nimport { useDispatch, useSelector } from '../../../utils/types/store';\nimport { TOrderIngredients } from '../../../utils/types/types';\nimport { v4 as uuidv4 } from 'uuid';\nimport { getDate } from '../../../utils/functions/getDate';\nimport { getInfo } from '../../../utils/functions/getInfo';\nimport { getOrderPrice } from '../../../utils/functions/getPrice';\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { shallowEqual } from 'react-redux';\nimport {\n    WS_CONNECTION_CLOSED,\n    WS_CONNECTION_START,\n} from '../../../Services/actions/socketAction/socketActions';\nimport { getCookie } from '../../../utils/functions/cookieFunctions/getCookie';\nimport { useRouteMatch } from 'react-router-dom';\n\ntype TProfileOrders = {\n    onActive: (element: TOrderIngredients) => void;\n};\n\nconst ProfileOrders: FC<TProfileOrders> = (props) => {\n    const dispatch = useDispatch();\n    const match = useRouteMatch({\n        path: '/profile/orders',\n        strict: true,\n        sensitive: true,\n    });\n    useEffect(() => {\n        // console.log('hello! orders!');\n\n        dispatch({\n            type: WS_CONNECTION_START,\n            payload: '?token=' + getCookie('accessToken'),\n        });\n\n        return () => {\n            // console.log('goodbye! orders!');\n            dispatch({ type: WS_CONNECTION_CLOSED });\n        };\n    }, []);\n\n    const { ingredients, payload } = useSelector(\n        (store) => ({\n            ingredients: store.component.ingredients,\n            payload: store.sockets.payload,\n        }),\n        shallowEqual\n    );\n\n    return (\n        // контенер с заказами\n        <div className={profileStyles.ordersContainer}>\n            <div className={profileStyles.orders}>\n                {payload &&\n                    payload.orders.map((element: any) => (\n                        // карточка заказа\n                        <div\n                            className={profileStyles.orderPosition}\n                            key={uuidv4()}\n                            onClick={(): void => {\n                                props.onActive(element);\n                            }}>\n                            <div className={profileStyles.positionInfo}>\n                                <p className=\"text text_type_digits-default\">\n                                    #{element.number}\n                                </p>\n                                <p className=\"text text_type_main-default text_color_inactive\">\n                                    {getDate(element.createdAt)}\n                                </p>\n                            </div>\n                            <div className={profileStyles.desContainer}>\n                                <h2\n                                    className={\n                                        profileStyles.h2Header +\n                                        ' text text_type_main-medium'\n                                    }>\n                                    {element.name}\n                                </h2>\n                                {element.status === 'done' ? (\n                                    <p className=\"text text_type_main-default text_color_success\">\n                                        Выполнен\n                                    </p>\n                                ) : element.status === 'created' ? (\n                                    <p className=\"text text_type_main-default\">\n                                        Создан\n                                    </p>\n                                ) : (\n                                    <p className=\"text text_type_main-default text_color_error\">\n                                        Отменён\n                                    </p>\n                                )}\n                            </div>\n                            <div className={profileStyles.priceLevel}>\n                                <div className={profileStyles.orderIngredients}>\n                                    {element.ingredients.map(\n                                        (elem: any, index: number) =>\n                                            index < 5 ? (\n                                                <div\n                                                    className={\n                                                        profileStyles.pageContainer\n                                                    }\n                                                    key={uuidv4()}>\n                                                    <img\n                                                        src={\n                                                            ingredients[\n                                                                getInfo(\n                                                                    elem,\n                                                                    ingredients\n                                                                )\n                                                            ].image_mobile\n                                                        }\n                                                        width=\"56px\"\n                                                        height=\"56px\"\n                                                        alt=\"Ingredient icon\"\n                                                    />\n                                                </div>\n                                            ) : index === 5 ? (\n                                                <div\n                                                    className={\n                                                        profileStyles.pageContainer\n                                                    }\n                                                    key={uuidv4()}>\n                                                    <p className=\"text text_type_digits-default\">\n                                                        +\n                                                        {element.ingredients\n                                                            .length - index}\n                                                    </p>\n                                                    <img\n                                                        src={\n                                                            ingredients[\n                                                                getInfo(\n                                                                    elem,\n                                                                    ingredients\n                                                                )\n                                                            ].image_mobile\n                                                        }\n                                                        width=\"56px\"\n                                                        height=\"56px\"\n                                                        className={\n                                                            profileStyles.img\n                                                        }\n                                                        alt=\"Ingredient icon\"\n                                                    />\n                                                </div>\n                                            ) : null\n                                    )}\n                                </div>\n                                <div className={profileStyles.priceContainer}>\n                                    <p className=\"text text_type_main-medium\">\n                                        {getOrderPrice(\n                                            element.ingredients,\n                                            ingredients\n                                        )}\n                                    </p>\n                                    <div\n                                        className={profileStyles.iconContainer}>\n                                        <CurrencyIcon type=\"primary\" />\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    ))}\n            </div>\n        </div>\n    );\n};\n\n//propTypes - нету\n\nexport default ProfileOrders;\n","import React, { FC, useEffect, useState } from 'react';\nimport profileStyles from './profile.module.css';\nimport { useHistory, useLocation, useRouteMatch } from 'react-router-dom';\nimport '../../commonStyles/styles.css';\nimport ProfileHeader from '../../Components/profileComponents/profileHeader/profile-header';\nimport ProfileMain from '../../Components/profileComponents/profileMain/profile-main';\nimport ProfileOrders from '../../Components/profileComponents/profileOrders/profile-orders';\nimport { useDispatch } from '../../utils/types/store';\nimport { Location } from 'history';\nimport { setActive } from '../../Services/actions/componentAction/components';\nimport { setPersonOrderInfo } from '../../Services/actions/requestAction/requestsActions';\nimport { TOrderIngredients } from '../../utils/types/types';\n\nconst Profile: FC = () => {\n    const [activeOrder, onActive] = useState<TOrderIngredients | undefined>(\n        undefined\n    );\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const location = useLocation<{\n        background: Location | undefined;\n        orderBackground: Location | undefined;\n        personOrderBackground: Location | undefined;\n    }>();\n    const { url } = useRouteMatch();\n\n    //функция прямой передачи компонента из заказов\n    const getActiveElement = (element: TOrderIngredients): void => {\n        dispatch(setPersonOrderInfo(element));\n        dispatch(setActive(true));\n        history.push({\n            pathname: `/profile/orders/${element._id}`,\n            state: { personOrderBackground: location },\n        });\n        onActive(element);\n    };\n\n    return (\n        <div className={profileStyles.commonContainer}>\n            <div className={profileStyles.subRouterContainer}>\n                <ProfileHeader />\n            </div>\n            <div className={profileStyles.formContainer}>\n                {url.split('/').length === 2 ? (\n                    <ProfileMain />\n                ) : (\n                    <ProfileOrders onActive={getActiveElement} />\n                )}\n            </div>\n        </div>\n    );\n};\n\n//propTypes - нету\nexport default Profile;\n","import React, { FC, useEffect } from 'react';\nimport constructBurger from '../burger-ingredients.module.css';\nimport {\n    Counter,\n    CurrencyIcon,\n} from '@ya.praktikum/react-developer-burger-ui-components';\nimport cardStyle from './ingredient-list.module.css';\nimport {\n    setData,\n    setActive,\n    dragElement,\n} from '../../../Services/actions/componentAction/components';\nimport { Redirect, useLocation } from 'react-router-dom';\nimport { getCookie } from '../../../utils/functions/cookieFunctions/getCookie';\nimport { TCard } from '../../../utils/types/types';\nimport { useDispatch, useSelector } from '../../../utils/types/store';\n\ninterface IProps {\n    typeOfMeal: string | undefined;\n}\n\nconst IngredientList: FC<IProps> = (props) => {\n    const dispatch = useDispatch();\n    const location = useLocation();\n    const { ingredients, cardData } = useSelector((store) => ({\n        ingredients: store.component.ingredients,\n        cardData: store.component.cardData,\n    }));\n    // console.log(cardData);\n    useEffect(() => {\n        if (getCookie('isActive') !== undefined) {\n            dispatch(setActive(true));\n            let getCookieResp: string | undefined = getCookie('data');\n            getCookieResp !== undefined &&\n                dispatch(setData(JSON.parse(getCookieResp)));\n        } else {\n            dispatch(setActive(false));\n        }\n    }, []);\n\n    if (cardData) {\n        return (\n            <Redirect\n                to={{\n                    pathname: '/ingredients/' + cardData['_id'],\n                    state: { background: location },\n                }}\n            />\n        );\n    }\n    // console.log(ingredients);\n\n    return (\n        <div className={cardStyle.cardArea}>\n            {ingredients &&\n                ingredients.map(\n                    (cards: TCard) =>\n                        props.typeOfMeal === cards.type && (\n                            <div\n                                key={cards['_id']}\n                                data-cy=\"ing\"\n                                draggable\n                                className={cardStyle.cardBox}\n                                onDrag={(\n                                    e: React.DragEvent<HTMLDivElement>\n                                ): void => {\n                                    e.preventDefault();\n                                    dispatch(\n                                        dragElement(cards, 'ingredients', false)\n                                    );\n                                }}>\n                                <div\n                                    className={cardStyle.cardContainer}\n                                    onClick={(): void => {\n                                        dispatch(setData(cards));\n                                        dispatch(setActive(true));\n                                    }}>\n                                    {cards['__v'] > 0 && (\n                                        <Counter\n                                            count={cards['__v']}\n                                            size=\"default\"\n                                        />\n                                    )}\n                                    <img\n                                        alt=\"Фото ингридиента\"\n                                        src={cards.image}\n                                        className={cardStyle.cardImage}\n                                    />\n                                    <div className={constructBurger.price}>\n                                        <p className=\"text text_type_digits-default\">\n                                            {cards.price}\n                                        </p>\n                                        <CurrencyIcon type=\"primary\" />\n                                    </div>\n                                    <p className=\"text text_type_main-default\">\n                                        {cards.name}\n                                    </p>\n                                </div>\n                            </div>\n                        )\n                )}\n        </div>\n    );\n};\n\nexport default IngredientList;\n","import React, { FC, useState } from 'react';\nimport ingredientsBurger from './burger-ingredients.module.css';\nimport { Tab } from '@ya.praktikum/react-developer-burger-ui-components';\nimport IngredientList from './ingredientList/ingredient-list';\nimport appStyles from '../app/app.module.css';\nimport { scrollFunction } from '../../utils/functions/scrollFunction';\n\nconst BurgerIngredients: FC = () => {\n    const [current, setCurrent] = useState<string>('one');\n    // console.log(cardData);\n\n    return (\n        <div className={ingredientsBurger.constructorR}>\n            {/*Заголовок*/}\n            <h1 className={appStyles.app_text + 'text text_type_main-large'}>\n                Соберите бургер\n            </h1>\n\n            {/*Панель*/}\n            <div className={ingredientsBurger.tabArea}>\n                <Tab\n                    value=\"one\"\n                    active={current === 'one'}\n                    onClick={setCurrent}>\n                    Булки\n                </Tab>\n                <Tab\n                    value=\"two\"\n                    active={current === 'two'}\n                    onClick={setCurrent}>\n                    Соусы\n                </Tab>\n                <Tab\n                    value=\"three\"\n                    active={current === 'three'}\n                    onClick={setCurrent}>\n                    Начинки\n                </Tab>\n            </div>\n\n            {/*Меню со всеми ингредиентами*/}\n            <section\n                className={ingredientsBurger.menu}\n                id=\"menu\"\n                onScroll={(): void => {\n                    let scrollFunctionResp: string | undefined =\n                        scrollFunction();\n                    if (scrollFunctionResp) {\n                        setCurrent(scrollFunctionResp);\n                    }\n                }}>\n                {/*{isActive && cardData && <IngredientModal onClose={() => {}} />}*/}\n                {/*Секция булок*/}\n                <section id=\"bunsSection\">\n                    <p className=\"text text_type_main-medium \" id=\"bun\">\n                        Булки\n                    </p>\n                    <div className={ingredientsBurger.cardList}>\n                        <IngredientList typeOfMeal=\"bun\" />\n                    </div>\n                </section>\n\n                {/*Секция соусов*/}\n                <section id=\"sauceSection\">\n                    <p className=\"text text_type_main-medium\" id=\"sauce\">\n                        Соусы\n                    </p>\n                    <div className={ingredientsBurger.cardList}>\n                        <IngredientList typeOfMeal=\"sauce\" />\n                    </div>\n                </section>\n\n                {/*Секция начинок*/}\n                <section id=\"mainSection\">\n                    <p className=\"text text_type_main-medium\" id=\"main\">\n                        Начинки\n                    </p>\n                    <div className={ingredientsBurger.cardList}>\n                        <IngredientList typeOfMeal=\"main\" />\n                    </div>\n                </section>\n            </section>\n        </div>\n    );\n};\n\n//propTypes - нету\nexport default BurgerIngredients;\n","export function scrollFunction(): string | undefined {\n    const block: HTMLElement | null = document.getElementById('menu');\n    const sauceBlock: HTMLElement | null =\n        document.getElementById('sauceSection');\n    const bunsBlock: HTMLElement | null =\n        document.getElementById('bunsSection');\n    const mainBlock: HTMLElement | null =\n        document.getElementById('mainSection');\n    if (bunsBlock && sauceBlock && mainBlock && block) {\n        if (\n            Math.abs(bunsBlock.offsetTop - block.scrollTop) <\n                Math.abs(sauceBlock.offsetTop - block.scrollTop) &&\n            Math.abs(bunsBlock.offsetTop - block.scrollTop) <\n                Math.abs(mainBlock.offsetTop - block.scrollTop)\n        ) {\n            return 'one';\n        }\n        if (\n            Math.abs(sauceBlock.offsetTop - block.scrollTop) <\n                Math.abs(mainBlock.offsetTop - block.scrollTop) &&\n            Math.abs(sauceBlock.offsetTop - block.scrollTop) <\n                Math.abs(bunsBlock.offsetTop - block.scrollTop)\n        ) {\n            return 'two';\n        }\n\n        if (\n            Math.abs(mainBlock.offsetTop - block.scrollTop) <\n                Math.abs(sauceBlock.offsetTop - block.scrollTop) &&\n            Math.abs(mainBlock.offsetTop - block.scrollTop) <\n                Math.abs(bunsBlock.offsetTop - block.scrollTop)\n        ) {\n            return 'three';\n        }\n    }\n}\n","import React, { FC } from 'react';\nimport orderStyles from './order-details.module.css';\nimport { CheckMarkIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { useSelector } from '../../utils/types/store';\n\nconst OrderDetails: FC = () => {\n    const { orderInfo } = useSelector((store) => ({\n        orderInfo: store.component.orderInfo,\n    }));\n    // console.log(orderInfo);\n    return orderInfo ? (\n        <div className={orderStyles.main}>\n            <h2\n                className={\n                    orderStyles.headDig + ' text text_type_digits-large'\n                }>\n                {orderInfo.order.number}\n            </h2>\n\n            <p className={orderStyles.ident + ' text text_type_main-medium'}>\n                идентификатор заказа\n            </p>\n            <div className={orderStyles.done}>\n                <div className={orderStyles.doneMini}>\n                    <div className={orderStyles.doneDiv}>\n                        <CheckMarkIcon type=\"primary\" />\n                    </div>\n                </div>\n            </div>\n            <div className={orderStyles.desc}>\n                <p className=\"text text_type_main-small\">\n                    Ваш заказ начали готовить\n                </p>\n                <p className=\"text text_type_main-small text_color_inactive\">\n                    Дождитесь готовности на орбитальной станции\n                </p>\n            </div>\n        </div>\n    ) : (\n        <div className={orderStyles.main}>\n            <h2\n                className={\n                    orderStyles.headDig + ' text text_type_digits-medium'\n                }>\n                Формируем номер...\n            </h2>\n            <p className={orderStyles.ident + ' text text_type_main-medium'}>\n                Пожалуйста, подождите\n            </p>\n            <div className={orderStyles.done}>\n                <div className={orderStyles.doneMini}>\n                    <div className={orderStyles.doneDiv}>\n                        {/*<CheckMarkIcon type=\"primary\" />*/}\n                    </div>\n                </div>\n            </div>\n            <div className={orderStyles.desc}>\n                <p className=\"text text_type_main-small\">\n                    Ваш заказ начали готовить\n                </p>\n                <p className=\"text text_type_main-small text_color_inactive\">\n                    Дождитесь готовности на орбитальной станции\n                </p>\n            </div>\n        </div>\n    );\n};\n\n//propTypes - нету\n\nexport default OrderDetails;\n","import React, { FC } from 'react';\nimport overlayStyles from './modal-overlay.module.css';\n\ninterface IProps {\n    onClose: () => void;\n}\n//компонент-подложка по модальное окно\nconst ModalOverlay: FC<IProps> = (props) => {\n    return (\n        <div\n            className={overlayStyles.modalActive}\n            onClick={() => {\n                props.onClose();\n            }}\n        />\n    );\n};\n\nexport default ModalOverlay;\n","import React, { FC, ReactChildren, ReactNode, useEffect } from 'react';\nimport modalStyles from './modal-styles.module.css';\nimport { CloseIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport ModalOverlay from '../modalOverlay/modal-overlay';\nimport { createPortal } from 'react-dom';\nimport { TOrder } from '../../../utils/types/types';\n\ntype TProps = {\n    info?: undefined | null | { name: string; success: boolean; order: TOrder };\n    onClose: () => void;\n    children?: ReactNode | ReactChildren;\n    title: string;\n};\n\nconst Modal: FC<TProps> = (props) => {\n    const refRoot: HTMLElement | null = document.getElementById('modal');\n    useEffect(() => {\n        const closeByEscape = (e: KeyboardEvent) => {\n            if (e.key === 'Escape') {\n                props.onClose();\n            }\n        };\n        document.addEventListener('keydown', closeByEscape);\n        return () => {\n            document.removeEventListener('keydown', closeByEscape);\n        };\n    }, [props.info]);\n    // console.log(props.info);\n\n    return createPortal(\n        <div className={modalStyles.modalContainer}>\n            <div\n                className={modalStyles.modalContent}\n                onClick={(e: React.MouseEvent<HTMLDivElement>) =>\n                    e.stopPropagation()\n                }>\n                <div className={modalStyles.topLevel}>\n                    <h1 className=\"text text_type_main-large\">{props.title}</h1>\n\n                    <div\n                        className={modalStyles.logoDiv}\n                        onClick={() => {\n                            props.onClose();\n                        }}>\n                        <CloseIcon type=\"primary\" />\n                    </div>\n                </div>\n                {props.children}\n            </div>\n            <ModalOverlay onClose={props.onClose} />\n        </div>,\n        refRoot!\n    );\n};\n\n// Передаются функция выключения, заголовок, children\n\nexport default Modal;\n","import React, { FC } from 'react';\nimport constStyles from './burger-constructor.module.css';\n\n//импортироуемые компоненты\nimport {\n    Button,\n    ConstructorElement,\n    CurrencyIcon,\n    DragIcon,\n} from '@ya.praktikum/react-developer-burger-ui-components';\n\n//модальное окно\nimport OrderDetails from '../orderDetails/order-details';\nimport { v4 as uuidv4 } from 'uuid';\n//экшены\nimport {\n    clearInfo,\n    decreaseCounter,\n    deleteElement,\n    dragElement,\n    getOrder,\n    increaseCounter,\n    replaceElement,\n    setActive,\n    setDragOver,\n} from '../../Services/actions/componentAction/components';\nimport { profileRequest } from '../../Services/actions/requestAction/requestsActions';\nimport { useHistory } from 'react-router-dom';\nimport { TCard } from '../../utils/types/types';\nimport Modal from '../Modals/modal/modal';\nimport { useDispatch, useSelector } from '../../utils/types/store';\n\n//доделать\nconst BurgerConstructor: FC = () => {\n    const {\n        buns,\n        ingredients,\n        components,\n        orderInfo,\n        totalPrice,\n        draggedElement,\n        underDraggedElement,\n        cart,\n        isReady,\n        isOrderActive,\n        profileRequestError,\n        baseURL,\n        isLogin,\n    } = useSelector((store) => ({\n        ingredients: store.component.ingredients,\n        buns: store.component.order.buns,\n        components: store.component.order.components,\n        isActive: store.component.isActiv,\n        isOrderActive: store.component.isOrderActiv,\n        orderInfo: store.component.orderInfo,\n        totalPrice: store.component.totalPrice,\n        draggedElement: store.component.draggedElement,\n        underDraggedElement: store.component.underDraggedElement,\n        cart: store.component.cart,\n        isReady: store.component.isReady,\n        isOrderSuccess: store.orderData.isOrderSuccess,\n        isOrderSend: store.orderData.isOrderSend,\n        profileRequestError: store.requests.profileRequestError,\n        baseURL: store.requests.baseURL,\n        isLogin: store.requests.isLogin,\n    }));\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const closeWindow = (): void => {\n        orderInfo &&\n            dispatch(clearInfo(ingredients)) &&\n            dispatch(setActive(false));\n    };\n    // console.log(buns);\n    return (\n        <div className={constStyles.area}>\n            <div className={constStyles.orderArea}>\n                <div\n                    className={constStyles.orderDropnDrag}\n                    data-cy=\"drop\"\n                    onDrop={(e: React.DragEvent<HTMLDivElement>): void => {\n                        e.preventDefault();\n                        if (cart === 'ingredients') {\n                            dispatch(\n                                increaseCounter(draggedElement!, ingredients)\n                            );\n                        }\n                        dispatch(\n                            replaceElement(\n                                draggedElement!,\n                                underDraggedElement!,\n                                components,\n                                buns,\n                                cart,\n                                isReady\n                            )\n                        );\n                    }}\n                    onDragOver={(e: React.DragEvent<HTMLDivElement>) =>\n                        e.preventDefault()\n                    }>\n                    <div className={constStyles.edgeElement}>\n                        {buns && (\n                            <ConstructorElement\n                                type=\"top\"\n                                isLocked={true}\n                                text={buns.name + ' (верх)'}\n                                price={buns.price}\n                                thumbnail={buns.image}\n                            />\n                        )}\n                    </div>\n\n                    {/*Блок формирования центральной части бургера*/}\n                    <div className={constStyles.middle}>\n                        {isOrderActive && (\n                            <Modal\n                                title=\"\"\n                                info={orderInfo}\n                                onClose={(): void => closeWindow()}>\n                                <OrderDetails />\n                            </Modal>\n                        )}\n                        {components &&\n                            components.map((cards: TCard, index: number) => (\n                                <div\n                                    className={constStyles.position}\n                                    key={uuidv4()}\n                                    draggable\n                                    onDrag={(\n                                        e: React.DragEvent<HTMLDivElement>\n                                    ): void => {\n                                        e.preventDefault();\n                                        dispatch(\n                                            dragElement(\n                                                cards,\n                                                'constructor',\n                                                false\n                                            )\n                                        );\n                                    }}\n                                    onDrop={(\n                                        e: React.DragEvent<HTMLDivElement>\n                                    ): void => {\n                                        e.preventDefault();\n                                        replaceElement(\n                                            draggedElement!,\n                                            underDraggedElement!,\n                                            components,\n                                            buns,\n                                            cart,\n                                            false\n                                        );\n                                    }}\n                                    onDragOver={(\n                                        e: React.DragEvent<HTMLDivElement>\n                                    ): void => {\n                                        e.preventDefault();\n                                        dispatch(setDragOver(cards));\n                                    }}>\n                                    <div className={constStyles.test}>\n                                        <DragIcon type=\"primary\" />\n                                        <div\n                                            className={\n                                                constStyles.middleElement\n                                            }>\n                                            <ConstructorElement\n                                                text={cards.name}\n                                                price={cards.price}\n                                                thumbnail={\n                                                    cards['image_mobile']\n                                                }\n                                                handleClose={(): void => {\n                                                    dispatch(\n                                                        deleteElement(\n                                                            index,\n                                                            cards,\n                                                            ingredients,\n                                                            components.length\n                                                        )\n                                                    );\n                                                    dispatch(\n                                                        decreaseCounter(\n                                                            cards,\n                                                            ingredients\n                                                        )\n                                                    );\n                                                }}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                            ))}\n                    </div>\n                    {/*Конец блока части формирования центральной части*/}\n                    <div className={constStyles.edgeElement}>\n                        {buns && (\n                            <ConstructorElement\n                                type=\"bottom\"\n                                isLocked={true}\n                                text={buns.name + ' (низ)'}\n                                price={buns.price}\n                                thumbnail={buns.image}\n                            />\n                        )}\n                    </div>\n                </div>\n\n                {/*Блок цены*/}\n                <div className={constStyles.price}>\n                    <div className={constStyles.priceArea}>\n                        <p className=\"text text_type_digits-medium\">\n                            {totalPrice}\n                        </p>\n                        <CurrencyIcon type=\"primary\" />\n                    </div>\n                    <div>\n                        <Button\n                            type=\"primary\"\n                            size=\"large\"\n                            onClick={(): void => {\n                                if (isLogin) {\n                                    dispatch(profileRequest(baseURL));\n                                    if (profileRequestError) {\n                                        dispatch(profileRequest(baseURL));\n                                    }\n                                    dispatch(\n                                        getOrder(\n                                            buns,\n                                            components,\n                                            baseURL + '/orders'\n                                        )\n                                    );\n                                } else {\n                                    history.replace({ pathname: '/login' });\n                                }\n                            }}\n                            disabled={buns === null}>\n                            Оформить заказ\n                        </Button>\n                    </div>\n                </div>\n                {/*Конец блока цены*/}\n            </div>\n        </div>\n    );\n};\n\n//propTypes - нету\n\nexport default BurgerConstructor;\n","import React, { FC } from 'react';\nimport appStyles from '../../Components/app/app.module.css';\nimport BurgerIngredients from '../../Components/burgerIngridients/burger-ingredients';\nimport BurgerConstructor from '../../Components/burgerConstructor/burger-constructor';\n\nconst Home: FC = () => {\n    return (\n        <div>\n            <main className={appStyles.main}>\n                <div className={appStyles.burgerIngredients}>\n                    <BurgerIngredients />\n                </div>\n                <BurgerConstructor />\n            </main>\n        </div>\n    );\n};\n\n//propTypes - нету\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport ingredientStyles from './ingredStyles.module.css';\nimport { useRouteMatch } from 'react-router-dom';\nimport { TCard } from '../../utils/types/types';\nimport { RootState, useSelector } from '../../utils/types/store';\n\nconst Ingredient = () => {\n    const [ingredientData, setIngredientData] = useState<TCard | null>(null);\n    const { ingredients } = useSelector((store) => ({\n        ingredients: store.component.ingredients,\n    }));\n\n    const { url } = useRouteMatch();\n    useEffect((): void => {\n        let idIngredient = -1;\n        ingredients.map((cards: TCard, index: number): void => {\n            if (cards['_id'] === url.split('/')[2]) {\n                idIngredient = index;\n            }\n            setIngredientData(ingredients[idIngredient]);\n        });\n    }, [ingredients]);\n\n    return (\n        <div className={ingredientStyles.commonContainer}>\n            {ingredientData && (\n                <div className={ingredientStyles.ingredContainer}>\n                    <h1 className=\"text text_type_main-large\">\n                        Детали ингредиента\n                    </h1>\n                    <img\n                        src={ingredientData.image_large}\n                        alt={ingredientData.name}\n                    />\n\n                    <h2 className=\"text text_type_main-medium text_color_active\">\n                        {ingredientData.name}\n                    </h2>\n                    <div className={ingredientStyles.descriptionDiv}>\n                        <div className={ingredientStyles.subDescription}>\n                            <p className=\"text text_type_main-small text_color_inactive\">\n                                Калории,ккал\n                            </p>\n                            <p className=\"text text_type_main-default text_color_inactive\">\n                                {/*{cardData.calories}*/}\n                                {ingredientData.calories}\n                            </p>\n                        </div>\n                        <div className={ingredientStyles.subDescription}>\n                            <p className=\"text text_type_main-small text_color_inactive\">\n                                Белки г\n                            </p>\n                            <p className=\"text text_type_main-default text_color_inactive\">\n                                {/*{cardData.proteins}*/}\n                                {ingredientData.proteins}\n                            </p>\n                        </div>\n                        <div className={ingredientStyles.subDescription}>\n                            <p className=\"text text_type_main-small text_color_inactive\">\n                                Жиры, г\n                            </p>\n                            <p className=\"text text_type_main-default text_color_inactive\">\n                                {/*{cardData.fat}*/}\n                                {ingredientData.fat}\n                            </p>\n                        </div>\n                        <div className={ingredientStyles.subDescription}>\n                            <p className=\"text text_type_main-default text_color_inactive\">\n                                Углеводы, г\n                            </p>\n                            <p className=\"text text_type_main-default text_color_inactive\">\n                                {/*{cardData.carbohydrates}*/}\n                                {ingredientData.carbohydrates}\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\n//propTypes - нету\nexport default Ingredient;\n","import React, { FC } from 'react';\nimport { Redirect, Route, RouteProps } from 'react-router-dom';\nimport { RootState, useSelector } from '../../utils/types/store';\n\nconst ProtectedRoute: FC<RouteProps> = ({ children, ...rest }) => {\n    const { isLogin } = useSelector((store) => ({\n        isLogin: store.requests.isLogin,\n    }));\n\n    return (\n        <Route\n            {...rest}\n            // Получим текущий маршрут, с которого произойдёт переадресация\n            // для неавторизованного пользователя\n            render={({ location }) =>\n                isLogin ? (\n                    children\n                ) : (\n                    // переводим на логин\n                    <Redirect\n                        to={{\n                            pathname: '/login',\n                            state: { from: location },\n                        }}\n                    />\n                )\n            }\n        />\n    );\n};\n\nexport default ProtectedRoute;\n","import React, { FC } from 'react';\nimport nfStyles from './not-found.module.css';\nimport { Button } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { useHistory } from 'react-router-dom';\nconst NotFoundPage: FC = () => {\n    const history = useHistory();\n    return (\n        <div className={nfStyles.commonContainer}>\n            <div className={nfStyles.formContainer}>\n                <div className={nfStyles.headerContainer}>\n                    <h1 className=\"text\">404</h1>\n                    <h2 className=\"text\">Page not found</h2>\n                </div>\n\n                <Button\n                    type=\"primary\"\n                    size=\"medium\"\n                    onClick={(): void => history.replace({ pathname: '/' })}>\n                    Назад\n                </Button>\n            </div>\n        </div>\n    );\n};\n\n//propTypes - нету\nexport default NotFoundPage;\n","import React, { FC } from 'react';\nimport ingredientStyles from './ingredient-styles.module.css';\nimport { useSelector } from '../../utils/types/store';\n\nconst IngredientDetails: FC = () => {\n    const { cardData } = useSelector((store) => ({\n        cardData: store.component.cardData,\n    }));\n\n    return cardData ? (\n        <div className={ingredientStyles.main}>\n            {/*блок с картинкой*/}\n            <div className={ingredientStyles.imageDiv}>\n                <img src={cardData.image} alt={cardData.name} />\n            </div>\n            {/*описание ингридиента*/}\n            <h2 className=\"text text_type_main-medium\">{cardData.name}</h2>\n            <div className={ingredientStyles.descriptionDiv}>\n                <div className={ingredientStyles.subDescription}>\n                    <p className=\"text text_type_main-small text_color_inactive\">\n                        Калории,ккал\n                    </p>\n                    <p className=\"text text_type_main-default text_color_inactive\">\n                        {cardData.calories}\n                    </p>\n                </div>\n                <div className={ingredientStyles.subDescription}>\n                    <p className=\"text text_type_main-small text_color_inactive\">\n                        Белки г\n                    </p>\n                    <p className=\"text text_type_main-default text_color_inactive\">\n                        {cardData.proteins}\n                    </p>\n                </div>\n                <div className={ingredientStyles.subDescription}>\n                    <p className=\"text text_type_main-small text_color_inactive\">\n                        Жиры, г\n                    </p>\n                    <p className=\"text text_type_main-default text_color_inactive\">\n                        {cardData.fat}\n                    </p>\n                </div>\n                <div className={ingredientStyles.subDescription}>\n                    <p className=\"text text_type_main-default text_color_inactive\">\n                        Углеводы, г\n                    </p>\n                    <p className=\"text text_type_main-default text_color_inactive\">\n                        {cardData.carbohydrates}\n                    </p>\n                </div>\n            </div>\n        </div>\n    ) : null;\n};\n\nexport default IngredientDetails;\n","import React, { FC } from 'react';\nimport IngredientDetails from '../../ingredientDetails/ingredient-details';\nimport Modal from '../modal/modal';\nimport {\n    clearInfo,\n    setActive,\n    setData,\n} from '../../../Services/actions/componentAction/components';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from '../../../utils/types/store';\n\nconst IngredientModal: FC = () => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const { orderInfo, ingredients } = useSelector((store) => ({\n        orderInfo: store.component.orderInfo,\n        ingredients: store.component.ingredients,\n    }));\n    const closeWindow = (): void => {\n        orderInfo ? dispatch(clearInfo(ingredients)) : dispatch(setData(null));\n        dispatch(setActive(false));\n        history.replace({ pathname: '/' });\n    };\n    return (\n        <div>\n            <Modal\n                title={'Детали ингредиента'}\n                onClose={(): void => closeWindow()}>\n                <IngredientDetails />\n            </Modal>\n        </div>\n    );\n};\n\n//propTypes - нету\n\nexport default IngredientModal;\n","import React, { FC, useEffect } from 'react';\nimport feedStyles from './feed.module.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport { setOrderInfo } from '../../Services/actions/requestAction/requestsActions';\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { useHistory, useLocation, useRouteMatch } from 'react-router-dom';\nimport { setActive } from '../../Services/actions/componentAction/components';\nimport { getInfo } from '../../utils/functions/getInfo';\nimport { getOrderPrice } from '../../utils/functions/getPrice';\nimport { useDispatch, useSelector } from '../../utils/types/store';\nimport { getDate } from '../../utils/functions/getDate';\nimport {\n    WS_CONNECTION_CLOSED,\n    WS_CONNECTION_START,\n} from '../../Services/actions/socketAction/socketActions';\nimport { TOrderIngredients } from '../../utils/types/types';\n\nconst Feed: FC = () => {\n    const history = useHistory();\n    const location = useLocation();\n    const dispatch = useDispatch();\n    const { ingredients, payload } = useSelector((store) => ({\n        ingredients: store.component.ingredients,\n        payload: store.sockets.payload,\n    }));\n    // console.log(ingredients);\n    useEffect(() => {\n        // console.log('hello! feed!');\n        dispatch({ type: WS_CONNECTION_START, payload: '/all' });\n\n        return () => {\n            // console.log('закрываем');\n            dispatch({ type: WS_CONNECTION_CLOSED });\n        };\n    }, []);\n\n    return (\n        // общий контейнер по странице\n        <div className={feedStyles.page}>\n            {/*заголовок */}\n            <h1\n                className={\n                    feedStyles.headerText + ' text text_type_main-large'\n                }>\n                Лента заказов\n            </h1>\n            {payload && (\n                <div className={feedStyles.section}>\n                    {/*блок с лентой заказов*/}\n                    <div className={feedStyles.orders}>\n                        {payload &&\n                            payload.orders.map((element: TOrderIngredients) => (\n                                // карточки/позиции заказа\n                                <div\n                                    key={uuidv4()}\n                                    className={feedStyles.orderPosition}\n                                    onClick={(): void => {\n                                        // console.log(element);\n                                        dispatch(setOrderInfo(element));\n                                        dispatch(setActive(true));\n                                        history.push({\n                                            pathname: `/feed/${element._id}`,\n                                            state: {\n                                                orderBackground: location,\n                                            },\n                                        });\n\n                                        // history.push(`/feed/${element['_id']}`);\n                                    }}>\n                                    {/*верхний уровень описания заказа*/}\n                                    <div className={feedStyles.positionInfo}>\n                                        <p className=\"text text_type_digits-default\">\n                                            #{element.number}\n                                        </p>\n                                        <p className=\"text text_type_main-default text_color_inactive\">\n                                            {getDate(element.createdAt)}\n                                        </p>\n                                    </div>\n                                    {/*название блюда*/}\n                                    <h2\n                                        className={\n                                            feedStyles.h2Header +\n                                            ' text text_type_main-default'\n                                        }>\n                                        {element.name}\n                                    </h2>\n                                    {/*уровень иконок ингредиентов и цены заказа*/}\n                                    <div className={feedStyles.priceLevel}>\n                                        <div\n                                            className={\n                                                feedStyles.orderIngredients\n                                            }>\n                                            {element &&\n                                                element.ingredients.map(\n                                                    (\n                                                        elem: string,\n                                                        index: number\n                                                    ) =>\n                                                        index < 5 ? (\n                                                            <div\n                                                                className={\n                                                                    feedStyles.pageContainer\n                                                                }\n                                                                key={uuidv4()}>\n                                                                {ingredients && (\n                                                                    <img\n                                                                        src={\n                                                                            ingredients[\n                                                                                getInfo(\n                                                                                    elem,\n                                                                                    ingredients\n                                                                                )\n                                                                            ]\n                                                                                .image_mobile\n                                                                        }\n                                                                        width=\"56px\"\n                                                                        height=\"56px\"\n                                                                        alt=\"Ingredient icon\"\n                                                                    />\n                                                                )}\n                                                            </div>\n                                                        ) : index === 5 ? (\n                                                            <div\n                                                                className={\n                                                                    feedStyles.pageContainer\n                                                                }\n                                                                key={uuidv4()}>\n                                                                <p className=\"text text_type_digits-default\">\n                                                                    +\n                                                                    {element\n                                                                        .ingredients\n                                                                        .length -\n                                                                        index}\n                                                                </p>\n                                                                {ingredients && (\n                                                                    <img\n                                                                        src={\n                                                                            ingredients[\n                                                                                getInfo(\n                                                                                    elem,\n                                                                                    ingredients\n                                                                                )\n                                                                            ]\n                                                                                .image_mobile\n                                                                        }\n                                                                        width=\"56px\"\n                                                                        height=\"56px\"\n                                                                        className={\n                                                                            feedStyles.img\n                                                                        }\n                                                                        alt=\"Ingredient icon\"\n                                                                    />\n                                                                )}\n                                                            </div>\n                                                        ) : null\n                                                )}\n                                        </div>\n                                        {/*блок цены*/}\n                                        <div className={feedStyles.priceBlock}>\n                                            {ingredients && (\n                                                <p className=\"text text_type_digits-default\">\n                                                    {getOrderPrice(\n                                                        element.ingredients,\n                                                        ingredients\n                                                    )}\n                                                </p>\n                                            )}\n                                            <CurrencyIcon type=\"primary\" />\n                                        </div>\n                                    </div>\n                                </div>\n                                // </Link>\n                            ))}\n                    </div>\n                    {/*блок готовности заказов и ко*/}\n                    <div className={feedStyles.orderInfo}>\n                        {/*блоки с номерами заказов*/}\n                        <div className={feedStyles.orderNumbers}>\n                            <div className={feedStyles.readyOrders}>\n                                <h2\n                                    className={\n                                        feedStyles.h2Header +\n                                        ' text text_type_main-medium'\n                                    }>\n                                    Готовы:\n                                </h2>\n                                {/*колонка с номерами*/}\n                                <div className={feedStyles.numbers}>\n                                    {payload &&\n                                        payload.orders.map(\n                                            (element: TOrderIngredients) =>\n                                                element.status === 'done' ? (\n                                                    <p\n                                                        className=\"text text_type_digits-default text_color_success\"\n                                                        key={uuidv4()}>\n                                                        {element.number}\n                                                    </p>\n                                                ) : null\n                                        )}\n                                </div>\n                            </div>\n                            {/*блоки с номерами заказов*/}\n                            <div className={feedStyles.ordersInWork}>\n                                <h2\n                                    className={\n                                        feedStyles.h2Header +\n                                        ' text text_type_main-medium'\n                                    }>\n                                    В работе:\n                                </h2>\n                                {/*колонки с заказами*/}\n                                <div className={feedStyles.numbers}>\n                                    {payload &&\n                                        payload.orders.map(\n                                            (element: TOrderIngredients) =>\n                                                element.status !== 'done' ? (\n                                                    <p\n                                                        className={\n                                                            'text text_type_digits-default'\n                                                        }\n                                                        key={uuidv4()}>\n                                                        {element.number}\n                                                    </p>\n                                                ) : null\n                                        )}\n                                </div>\n                            </div>\n                        </div>\n                        {/*счетчики выполненных заказов*/}\n                        <div className={feedStyles.ordersCounter}>\n                            <h2\n                                className={\n                                    feedStyles.h2Header +\n                                    ' text text_type_main-medium'\n                                }>\n                                Выполнено за всё время:\n                            </h2>\n                            <p className=\"text text_type_digits-large\">\n                                {payload && payload.total}\n                            </p>\n                        </div>\n                        {/*счетчики выполненных заказов*/}\n                        <div className={feedStyles.ordersPerDayCounter}>\n                            <h2\n                                className={\n                                    feedStyles.h2Header +\n                                    ' text text_type_main-medium'\n                                }>\n                                Выполнено за сегодня:\n                            </h2>\n                            <p className=\"text text_type_digits-large\">\n                                {payload && payload.totalToday}\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Feed;\n","export const getText = (status: string): string => {\n    if (status === 'done') return 'Выполнен';\n    else return 'В работе';\n};\n","import React, { FC, useEffect, useState } from 'react';\nimport orderStyle from '../../pages/Order/order.module.css';\nimport { getColourType } from '../../utils/functions/getColour';\nimport { getText } from '../../utils/functions/getText';\nimport { v4 as uuidv4 } from 'uuid';\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\n\nimport { useRouteMatch } from 'react-router-dom';\nimport { getInfo } from '../../utils/functions/getInfo';\nimport { getOrderPrice } from '../../utils/functions/getPrice';\nimport { useDispatch, useSelector } from '../../utils/types/store';\nimport { TCard, TOrderResponse } from '../../utils/types/types';\nimport { getDate } from '../../utils/functions/getDate';\nimport { getOrderInfo } from '../../Services/actions/requestAction/requestsActions';\n\nconst OrderIngredients: FC = () => {\n    // console.log('orderIngredients');\n    // копия данных\n    const [copyData, setCopyData] = useState<TCard[]>([]);\n    const dispatch = useDispatch();\n    // данные\n    const [data, setData] = useState<TOrderResponse | undefined>(undefined);\n    // цена\n    const [price, setPrice] = useState<number>(0);\n    const { url } = useRouteMatch();\n    const {\n        ingredients,\n        ordersActive,\n        personOrdersActive,\n        baseURL,\n        orderIngredientInfo,\n    } = useSelector((store) => ({\n        ingredients: store.component.ingredients,\n        ordersActive: store.requests.ordersActive,\n        personOrdersActive: store.requests.personOrdersActive,\n        baseURL: store.requests.baseURL,\n        orderIngredientInfo: store.requests.orderIngredientInfo,\n    }));\n\n    // запрос на сервер по заказу\n    useEffect(() => {\n        if (ordersActive && url.split('/')[1] === 'feed') {\n            dispatch(getOrderInfo(baseURL + '/orders/' + ordersActive.number));\n        }\n        if (personOrdersActive) {\n            dispatch(\n                getOrderInfo(baseURL + '/orders/' + personOrdersActive.number)\n            );\n        }\n        if (\n            !personOrdersActive &&\n            !ordersActive &&\n            url.split('/')[1] === 'feed'\n        ) {\n            dispatch(getOrderInfo(baseURL + '/orders/' + url.split('/')[2]));\n        }\n        if (\n            !personOrdersActive &&\n            !ordersActive &&\n            url.split('/')[1] === 'profile'\n        ) {\n            dispatch(getOrderInfo(baseURL + '/orders/' + url.split('/')[3]));\n            // setData(null);\n        }\n\n        return () => {};\n    }, [ingredients]);\n\n    useEffect(() => {\n        // console.log(orderIngredientInfo);\n        orderIngredientInfo && setData(orderIngredientInfo);\n    }, [orderIngredientInfo]);\n\n    // эффект для составления списка\n    useEffect(() => {\n        data && getInformation();\n    }, [data]);\n\n    // эффект для установки цены\n    useEffect(() => {\n        ordersActive &&\n            setPrice(getOrderPrice(ordersActive.ingredients, ingredients));\n        personOrdersActive &&\n            setPrice(\n                getOrderPrice(personOrdersActive.ingredients, ingredients)\n            );\n        // console.log(data);\n        data &&\n            setPrice(getOrderPrice(data.orders[0].ingredients, ingredients));\n    }, [ordersActive]);\n\n    // функция составления списка заказа и количества ингредиентов\n    const getInformation = () => {\n        let ingredientCopyObject: any = JSON.stringify(ingredients);\n        ingredientCopyObject = JSON.parse(ingredientCopyObject);\n        if (data) {\n            for (\n                let i: number = 0;\n                i < data.orders[0].ingredients.length;\n                i++\n            ) {\n                for (let j: number = 0; j < ingredientCopyObject.length; j++) {\n                    if (\n                        data.orders[0].ingredients[i] ===\n                        ingredientCopyObject[j]['_id']\n                    ) {\n                        ingredientCopyObject[j]['__v']++;\n                    }\n                }\n            }\n        }\n        setCopyData(ingredientCopyObject);\n    };\n\n    return (\n        <div>\n            {/*оформления детального вывода заказа*/}\n            {data && (\n                <div className={orderStyle.dataContainer}>\n                    {/*номер заказа*/}\n                    <p\n                        className={\n                            orderStyle.orderNumber +\n                            ' text text_type_digits-default'\n                        }>\n                        #{data.orders[0].number}\n                    </p>\n                    {/*название заказа*/}\n                    <p\n                        className={\n                            orderStyle.orderName + ' text text_type_main-medium'\n                        }>\n                        {data.orders[0].name}\n                    </p>\n                    {/*статус*/}\n                    <p\n                        className={\n                            orderStyle.orderStatus +\n                            ' text text_type_main-default ' +\n                            getColourType(data.orders[0].status)\n                        }>\n                        {getText(data.orders[0].status)}\n                    </p>\n                    <p\n                        className={\n                            orderStyle.orderIngredients +\n                            ' text text_type_main-medium'\n                        }>\n                        Состав:\n                    </p>\n                    {/*иконочки с ингредиентами*/}\n                    <div className={orderStyle.ingredientsContainer}>\n                        {copyData.length > 0 &&\n                            copyData.map((elem: TCard): any =>\n                                elem['__v'] > 0 ? (\n                                    <div\n                                        className={orderStyle.ingredientCard}\n                                        key={uuidv4()}>\n                                        <div\n                                            className={\n                                                orderStyle.photoContainer\n                                            }>\n                                            <img\n                                                className={orderStyle.photo}\n                                                src={\n                                                    copyData[\n                                                        getInfo(\n                                                            elem['_id'],\n                                                            ingredients\n                                                        )\n                                                    ].image_mobile\n                                                }\n                                                alt=\"Ingredients\"\n                                                height=\"56px\"\n                                                width=\"56px\"\n                                            />\n                                        </div>\n                                        <p className=\"text text_type_main-default\">\n                                            {\n                                                copyData[\n                                                    getInfo(\n                                                        elem['_id'],\n                                                        ingredients\n                                                    )\n                                                ].name\n                                            }\n                                        </p>\n                                        <div\n                                            className={\n                                                orderStyle.ingredientPriceContainer\n                                            }>\n                                            <p className=\"text text_type_digits-default\">\n                                                {\n                                                    copyData[\n                                                        getInfo(\n                                                            elem['_id'],\n                                                            ingredients\n                                                        )\n                                                    ]['__v']\n                                                }\n                                                &#215;{' '}\n                                                {\n                                                    copyData[\n                                                        getInfo(\n                                                            elem['_id'],\n                                                            ingredients\n                                                        )\n                                                    ].price\n                                                }\n                                                {'  '}\n                                                <CurrencyIcon type=\"primary\" />\n                                            </p>\n                                        </div>\n                                    </div>\n                                ) : null\n                            )}\n                    </div>\n                    <div className={orderStyle.otherInfo}>\n                        <p className=\"text text_type_main-default text_color_inactive\">\n                            {getDate(data.orders[0].createdAt)}\n                        </p>\n                        <div className={orderStyle.price}>\n                            <p className=\"text text_type_main-medium\">\n                                {getOrderPrice(\n                                    data.orders[0].ingredients,\n                                    ingredients\n                                )}\n                            </p>\n                            <CurrencyIcon type=\"primary\" />\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default OrderIngredients;\n","export const getColourType = (status: string): string => {\n    if (status === 'done') return 'text_color_success';\n    else return 'text_color_primary';\n};\n","import React, { FC, useEffect, useState } from 'react';\nimport orderStyle from './order.module.css';\nimport OrderIngredients from '../../Components/orderIngredients/order-ingredients.';\nimport { useDispatch, useSelector } from '../../utils/types/store';\nimport {\n    WS_CONNECTION_CLOSED,\n    WS_CONNECTION_START,\n} from '../../Services/actions/socketAction/socketActions';\nconst Order: FC = () => {\n    const dispatch = useDispatch();\n    const { ordersActive, personOrdersActive } = useSelector((store) => ({\n        ordersActive: store.requests.ordersActive,\n        personOrdersActive: store.requests.personOrdersActive,\n    }));\n    // console.log('order');\n    // useEffect(() => {\n    //     // console.log('order-open');\n    //     !ordersActive &&\n    //         !personOrdersActive &&\n    //         dispatch({ type: WS_CONNECTION_START, payload: '/all' });\n    //     return () => {\n    //         // console.log('order closed');\n    //         // console.log('закрываем');\n    //         dispatch({ type: WS_CONNECTION_CLOSED });\n    //     };\n    // }, []);\n\n    return <div className={orderStyle.page}>{<OrderIngredients />}</div>;\n};\n\nexport default Order;\n","import React, { FC } from 'react';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nimport { setActive } from '../../../Services/actions/componentAction/components';\nimport Modal from '../modal/modal';\nimport {\n    clearOrderInfo,\n    setOrderInfo,\n    setPersonOrderInfo,\n} from '../../../Services/actions/requestAction/requestsActions';\nimport OrderIngredients from '../../orderIngredients/order-ingredients.';\nimport { useDispatch } from '../../../utils/types/store';\n// модалка для заказов\nconst OrderModal: FC = () => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const { url } = useRouteMatch();\n\n    const closeWindow = (): void => {\n        // стираем все данные о заказе\n        dispatch(clearOrderInfo());\n        dispatch(setOrderInfo(undefined));\n        dispatch(setPersonOrderInfo(undefined));\n        dispatch(setActive(false));\n        url.split('/')[1] === 'feed'\n            ? history.replace({ pathname: '/feed' })\n            : history.replace({ pathname: '/profile/orders' });\n    };\n    // console.log('orderNodal');\n    return (\n        <div>\n            <Modal title={''} onClose={(): void => closeWindow()}>\n                <OrderIngredients />\n            </Modal>\n        </div>\n    );\n};\n\nexport default OrderModal;\n","import React, { FC, useEffect } from 'react';\nimport Header from '../header/header';\nimport appStyles from './app.module.css';\nimport { shallowEqual } from 'react-redux';\nimport { fetchData } from '../../Services/actions/componentAction/components';\nimport { Route, Switch, useLocation } from 'react-router-dom';\nimport Login from '../../pages/login/login';\nimport Registration from '../../pages/registration/registration';\nimport ForgotPassword from '../../pages/forgotPassword/forgot-password';\nimport ResetPassword from '../../pages/resetPassword/reset-password';\nimport Profile from '../../pages/profile/profile';\nimport Home from '../../pages/home/home';\nimport Ingredient from '../../pages/ingredientPage/ingredient';\nimport ProtectedRoute from '../protectedRoute/protected-route';\nimport NotFoundPage from '../../pages/404Page/not-found-page';\nimport { isAuth } from '../../utils/functions/isAuth';\nimport { IS_AUTH } from '../../Services/actions/requestAction/requestsActions';\nimport IngredientModal from '../Modals/IngredientModal/IngredientModal';\nimport { Location } from 'history';\nimport FeedPage from '../../pages/Feed/feed';\nimport Order from '../../pages/Order/order';\nimport OrderModal from '../Modals/orderModal/order-modal';\nimport { useDispatch, useSelector } from '../../utils/types/store';\n\nconst App: FC = () => {\n    const dispatch = useDispatch();\n    const location = useLocation<{\n        background: Location | undefined;\n        orderBackground: Location | undefined;\n        personOrderBackground: Location | undefined;\n    }>();\n\n    useEffect(() => {\n        dispatch(fetchData(baseURL + '/ingredients'));\n    }, []);\n\n    const {\n        isActive,\n        cardData,\n        isLogin,\n        baseURL,\n        ordersActive,\n        personOrdersActive,\n    } = useSelector(\n        (store) => ({\n            isActive: store.component.isActiv,\n            cardData: store.component.cardData,\n            isLogin: store.requests.isLogin,\n            baseURL: store.requests.baseURL,\n            ordersActive: store.requests.ordersActive,\n            personOrdersActive: store.requests.personOrdersActive,\n            ingredients: store.component.ingredients,\n        }),\n        shallowEqual\n    );\n\n    // console.log(personOrdersActive);\n    //задаём состояние подложки для модалки\n    let background: Location | undefined =\n        location.state && location.state.background;\n\n    //задаём состояние подложки для модалки\n    let orderBackground: Location | undefined =\n        location.state && location.state.orderBackground;\n\n    //задаём состояние подложки для модалки\n    let personOrderBackground: Location | undefined =\n        location.state && location.state.personOrderBackground;\n\n    //fetch запрос на получение ингедиентов\n    useEffect(() => {\n        dispatch(fetchData(baseURL + '/ingredients'));\n    }, []);\n\n    //запрос на авторизацию\n    useEffect(() => {\n        const data: boolean = isAuth();\n        dispatch({ type: IS_AUTH, data: data });\n    }, [isLogin]);\n\n    if (!cardData && background !== undefined) {\n        location.state.background = undefined;\n    }\n    if (!ordersActive && orderBackground !== undefined) {\n        location.state.orderBackground = undefined;\n    }\n    if (!personOrdersActive && personOrderBackground !== undefined) {\n        location.state.personOrderBackground = undefined;\n    }\n    // console.log(personOrderBackground);\n    // console.log('app');\n    // console.log(orderBackground);\n    return (\n        <>\n            {/*шапка с роутингом*/}\n            <Header />\n\n            {/*роуты*/}\n            <div className={appStyles.page}>\n                <Switch\n                    location={\n                        background ||\n                        orderBackground ||\n                        personOrderBackground ||\n                        location\n                    }>\n                    <Route exact path=\"/\">\n                        <Home />\n                    </Route>\n                    <Route path=\"/login\" exact={true}>\n                        <Login />\n                    </Route>\n                    <Route path=\"/register\" exact={true}>\n                        <Registration />\n                    </Route>\n                    <Route path=\"/forgot-password\" exact={true}>\n                        <ForgotPassword />\n                    </Route>\n                    <Route path=\"/reset-password\" exact={true}>\n                        <ResetPassword />\n                    </Route>\n                    <Route path=\"/feed\" exact={true}>\n                        <FeedPage />\n                    </Route>\n                    <ProtectedRoute path={'/profile'} exact={true}>\n                        <Profile />\n                    </ProtectedRoute>\n                    <ProtectedRoute path={'/profile/orders'} exact={true}>\n                        <Profile />\n                    </ProtectedRoute>\n                    <ProtectedRoute path={'/profile/orders/:id'} exact={true}>\n                        <Order />\n                    </ProtectedRoute>\n                    <Route path=\"/ingredients/:id\" exact={true}>\n                        <Ingredient />\n                    </Route>\n                    <Route path=\"/feed/:id\" exact={true}>\n                        <Order />\n                    </Route>\n                    <Route>\n                        <NotFoundPage />\n                    </Route>\n                </Switch>\n                {background && isActive && (\n                    <Route\n                        path=\"/ingredients/:id\"\n                        children={<IngredientModal />}\n                    />\n                )}\n                {orderBackground && isActive && (\n                    <Route path=\"/feed/:id\" children={<OrderModal />} />\n                )}\n                {personOrderBackground && isActive && (\n                    <Route\n                        path=\"/profile/orders/:id\"\n                        children={<OrderModal />}\n                    />\n                )}\n            </div>\n        </>\n    );\n};\n\nexport default App;\n","import { getCookie } from './cookieFunctions/getCookie';\n\nexport function isAuth(): boolean {\n    return getCookie('accessToken') !== undefined;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/app/app';\nimport { compose } from 'redux';\n\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { store } from './utils/types/store';\n\ndeclare global {\n    interface Window {\n        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n    }\n}\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myFlex\":\"burger-constructor_myFlex__1G3-K\",\"area\":\"burger-constructor_area__164es burger-constructor_myFlex__1G3-K\",\"orderArea\":\"burger-constructor_orderArea__TkMwE burger-constructor_myFlex__1G3-K\",\"orderDropnDrag\":\"burger-constructor_orderDropnDrag__2dUXF burger-constructor_myFlex__1G3-K\",\"price\":\"burger-constructor_price__1hgBX burger-constructor_myFlex__1G3-K\",\"priceArea\":\"burger-constructor_priceArea__Ndddd burger-constructor_myFlex__1G3-K\",\"middle\":\"burger-constructor_middle__Y-vL0 burger-constructor_myFlex__1G3-K\",\"position\":\"burger-constructor_position__1Wx87 burger-constructor_myFlex__1G3-K\",\"edgeElement\":\"burger-constructor_edgeElement__XabKd burger-constructor_myFlex__1G3-K\",\"middleElement\":\"burger-constructor_middleElement__yPqxL burger-constructor_myFlex__1G3-K\",\"test\":\"burger-constructor_test__2_Pv6 burger-constructor_myFlex__1G3-K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myFlex\":\"burger-ingredients_myFlex__12Pj_\",\"tabArea\":\"burger-ingredients_tabArea__rKXlW burger-ingredients_myFlex__12Pj_\",\"constructorR\":\"burger-ingredients_constructorR__2tTDJ burger-ingredients_myFlex__12Pj_\",\"menu\":\"burger-ingredients_menu__194i-\",\"price\":\"burger-ingredients_price__1SznU burger-ingredients_myFlex__12Pj_\",\"cardList\":\"burger-ingredients_cardList__2NQcW burger-ingredients_myFlex__12Pj_\",\"tab_tab__tYY6Z\":\"burger-ingredients_tab_tab__tYY6Z__3YntG\",\"constructor\":\"burger-ingredients_constructor__1w09b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flexModel\":\"ingredStyles_flexModel__1KOje\",\"commonContainer\":\"ingredStyles_commonContainer__1f7wB\",\"ingredContainer\":\"ingredStyles_ingredContainer__265WU\",\"imageContainer\":\"ingredStyles_imageContainer__3PlLu\",\"descriptionDiv\":\"ingredStyles_descriptionDiv__3xrwp ingredStyles_flexModel__1KOje\",\"subDescription\":\"ingredStyles_subDescription__baTXj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flexModel\":\"ingredient-styles_flexModel__1qtnU\",\"main\":\"ingredient-styles_main__271NP ingredient-styles_flexModel__1qtnU\",\"imageDiv\":\"ingredient-styles_imageDiv__2C_Hu\",\"descriptionDiv\":\"ingredient-styles_descriptionDiv__3D1aZ ingredient-styles_flexModel__1qtnU\",\"subDescription\":\"ingredient-styles_subDescription__1rRxK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myFlex\":\"app_myFlex__2vEV3\",\"main\":\"app_main__3NKnk app_myFlex__2vEV3\",\"burgerIngredients\":\"app_burgerIngredients__WHRtW\",\"page\":\"app_page__1fLWT app_myFlex__2vEV3\",\"app_text\":\"app_app_text__3MTSA app_myFlex__2vEV3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"login_mainContainer__2qNAc\",\"formContainer\":\"login_formContainer__1G-h2\",\"inputContainer\":\"login_inputContainer__1liGJ\",\"buttonContainer\":\"login_buttonContainer__7CJ2K\",\"headerText\":\"login_headerText__3Mp2-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"register_mainContainer__3WmfC\",\"formContainer\":\"register_formContainer__2xzOu\",\"inputContainer\":\"register_inputContainer__xQDpa\",\"input__container\":\"register_input__container__XDSMX\",\"buttonContainer\":\"register_buttonContainer__2TnT-\",\"headerText\":\"register_headerText__1YJQl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headContainer\":\"profile-header_headContainer__1dhDC\",\"pText\":\"profile-header_pText__GoNfV\",\"descText\":\"profile-header_descText__3s4Yx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myFlex\":\"ingredient-list_myFlex__MC6DI\",\"cardArea\":\"ingredient-list_cardArea__wWVJI ingredient-list_myFlex__MC6DI\",\"cardContainer\":\"ingredient-list_cardContainer__SV6zB\",\"cardImage\":\"ingredient-list_cardImage__2bN7Q\",\"cardBox\":\"ingredient-list_cardBox__51RdH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flexModel\":\"modal-styles_flexModel__3lQRG\",\"modalContent\":\"modal-styles_modalContent__334Ju modal-styles_flexModel__3lQRG\",\"modalContainer\":\"modal-styles_modalContainer__1VWbz modal-styles_flexModel__3lQRG\",\"topLevel\":\"modal-styles_topLevel__1zadz modal-styles_flexModel__3lQRG\",\"logoDiv\":\"modal-styles_logoDiv__39DV1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"commonContainer\":\"forgot_commonContainer__2JS-W\",\"formContainer\":\"forgot_formContainer__1ZIzL\",\"buttonContainer\":\"forgot_buttonContainer__ExgH5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"commonContainer\":\"reset_commonContainer__q252-\",\"formContainer\":\"reset_formContainer__262Gx\",\"buttonContainer\":\"reset_buttonContainer__3arYv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"commonContainer\":\"profile_commonContainer__22vxB\",\"formContainer\":\"profile_formContainer__3rr9O\",\"buttonContainer\":\"profile_buttonContainer__2V-3f\",\"tabsContainer\":\"profile_tabsContainer__177in\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"commonContainer\":\"not-found_commonContainer__33tBC\",\"formContainer\":\"not-found_formContainer__2Nx9W\",\"headerContainer\":\"not-found_headerContainer__3rTe-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flexModel\":\"feed_flexModel__Cwo6o\",\"page\":\"feed_page__3cdUa\",\"headerText\":\"feed_headerText__ZuarH\",\"section\":\"feed_section__3QWLH feed_flexModel__Cwo6o\",\"orders\":\"feed_orders__3SnWt\",\"orderInfo\":\"feed_orderInfo__2qX9V\",\"orderNumbers\":\"feed_orderNumbers__1rhhL\",\"h2Header\":\"feed_h2Header__3qyA1\",\"readyOrders\":\"feed_readyOrders__17DP4\",\"ordersInWork\":\"feed_ordersInWork__35vsh\",\"ordersCounter\":\"feed_ordersCounter__1tIjL\",\"ordersPerDayCounter\":\"feed_ordersPerDayCounter__US75_\",\"numbers\":\"feed_numbers__zFQmu\",\"orderPosition\":\"feed_orderPosition__21xVP\",\"positionInfo\":\"feed_positionInfo__2IOmX\",\"priceLevel\":\"feed_priceLevel__tgj7m\",\"priceBlock\":\"feed_priceBlock__q8aY_\",\"pageContainer\":\"feed_pageContainer__2qGtj\",\"orderIngredients\":\"feed_orderIngredients__2egmY\",\"img\":\"feed_img__2uYk7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"profile-main_formContainer__2lF63\",\"buttonContainer\":\"profile-main_buttonContainer__1XP15\",\"tabsContainer\":\"profile-main_tabsContainer__1cASA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flexModel\":\"modal-overlay_flexModel__2VMG7\",\"modalActive\":\"modal-overlay_modalActive__3Y1TS modal-overlay_flexModel__2VMG7\"};"],"sourceRoot":""}